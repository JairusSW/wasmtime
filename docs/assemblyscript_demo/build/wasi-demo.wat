(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $none_=>_none (func))
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $i64_=>_i32 (func (param i64) (result i32)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $none_=>_f64 (func (result f64)))
 (type $i32_i64_=>_i32 (func (param i32 i64) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i64_i32_=>_none (func (param i32 i64 i32)))
 (type $i64_i32_=>_i32 (func (param i64 i32) (result i32)))
 (type $i32_i64_i32_i32_=>_none (func (param i32 i64 i32 i32)))
 (type $i32_i64_=>_none (func (param i32 i64)))
 (type $i32_i64_i32_=>_i32 (func (param i32 i64 i32) (result i32)))
 (type $none_=>_i64 (func (result i64)))
 (type $i32_=>_i64 (func (param i32) (result i64)))
 (type $i64_=>_i64 (func (param i64) (result i64)))
 (type $i64_=>_none (func (param i64)))
 (type $i32_i64_i32_i64_i32_i64_i32_=>_i32 (func (param i32 i64 i32 i64 i32 i64 i32) (result i32)))
 (type $i32_f64_=>_i32 (func (param i32 f64) (result i32)))
 (type $f64_i32_=>_i32 (func (param f64 i32) (result i32)))
 (type $f64_=>_i32 (func (param f64) (result i32)))
 (import "wasi_snapshot_preview1" "fd_write" (func $~lib/bindings/wasi_snapshot_preview1/fd_write (param i32 i32 i32 i32) (result i32)))
 (import "wasi_snapshot_preview1" "proc_exit" (func $~lib/bindings/wasi_snapshot_preview1/proc_exit (param i32)))
 (import "wasi_snapshot_preview1" "clock_time_get" (func $~lib/bindings/wasi_snapshot_preview1/clock_time_get (param i32 i64 i32) (result i32)))
 (import "wasi_snapshot_preview1" "fd_read" (func $~lib/bindings/wasi_snapshot_preview1/fd_read (param i32 i32 i32 i32) (result i32)))
 (import "wasi_snapshot_preview1" "random_get" (func $~lib/bindings/wasi_snapshot_preview1/random_get (param i32 i32) (result i32)))
 (global $~lib/shared/runtime/Runtime.Stub i32 (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Minimal i32 (i32.const 1))
 (global $~lib/shared/runtime/Runtime.Incremental i32 (i32.const 2))
 (global $~lib/native/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/native/ASC_LOW_MEMORY_LIMIT i32 (i32.const 0))
 (global $~lib/wasi_process/wasi_process.stdout i32 (i32.const 1))
 (global $~lib/wasi_internal/tempbuf i32 (i32.const 2736))
 (global $~lib/date/_day (mut i32) (i32.const 0))
 (global $~lib/date/_month (mut i32) (i32.const 0))
 (global $~lib/native/ASC_RUNTIME i32 (i32.const 2))
 (global $wasi-demo/buffer (mut i32) (i32.const 0))
 (global $~lib/wasi_process/wasi_process.stdin i32 (i32.const 0))
 (global $~lib/math/random_seeded (mut i32) (i32.const 0))
 (global $~lib/math/random_state0_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state1_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state0_32 (mut i32) (i32.const 0))
 (global $~lib/math/random_state1_32 (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_plus (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_minus (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp (mut i32) (i32.const 0))
 (global $~lib/util/number/_K (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_pow (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp_pow (mut i32) (i32.const 0))
 (global $~lib/rt/__rtti_base i32 (i32.const 9648))
 (global $~lib/memory/__data_end i32 (i32.const 9684))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 42452))
 (global $~lib/memory/__heap_base i32 (i32.const 42452))
 (global $~started (mut i32) (i32.const 0))
 (memory $0 1)
 (data (i32.const 12) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00`\00\00\00H\00e\00l\00l\00o\00 \00f\00r\00o\00m\00 \00W\00a\00s\00m\00T\00i\00m\00e\00 \00W\00A\00S\00I\00 \00t\00h\00r\00o\00u\00g\00h\00 \00A\00s\00s\00e\00m\00b\00l\00y\00S\00c\00r\00i\00p\00t\00!\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 140) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\01\00\00\00\16\00\00\00\00\00\00\00")
 (data (i32.const 172) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00U\00n\00p\00a\00i\00r\00e\00d\00 \00s\00u\00r\00r\00o\00g\00a\00t\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 236) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s\00")
 (data (i32.const 284) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00\00\00\00\00")
 (data (i32.const 348) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 416) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 448) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 476) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 540) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 592) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 620) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 684) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00\1b\00[\00\00\00\00\00\00\00\00\00")
 (data (i32.const 716) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00m\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 748) ",\00\00\00\03\00\00\00\00\00\00\00\05\00\00\00\1c\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00\00\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00")
 (data (i32.const 796) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00")
 (data (i32.const 844) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 972) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 1036) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const
 (data (i32.const 1468) "\1c\04\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2524) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00\00\00\00\00")
 (data (i32.const 2620) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2652) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\"\00\00\00\'\00\00\00\00\00\00\00")
 (data (i32.const 2684) ",\00\00\00\03\00\00\00\00\00\00\00\05\00\00\00\1c\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00\00\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00")
 (data (i32.const 2736) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2764) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00S\00U\00C\00C\00E\00S\00S\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2812) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00T\00O\00O\00B\00I\00G\00")
 (data (i32.const 2844) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00A\00C\00C\00E\00S\00\00\00")
 (data (i32.const 2876) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00A\00D\00D\00R\00I\00N\00U\00S\00E\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2924) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00A\00D\00D\00R\00N\00O\00T\00A\00V\00A\00I\00L\00\00\00\00\00")
 (data (i32.const 2972) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00A\00F\00N\00O\00S\00U\00P\00P\00O\00R\00T\00\00\00\00\00\00\00")
 (data (i32.const 3020) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00A\00G\00A\00I\00N\00\00\00")
 (data (i32.const 3052) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00A\00L\00R\00E\00A\00D\00Y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3100) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00B\00A\00D\00F\00\00\00\00\00")
 (data (i32.const 3132) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00B\00A\00D\00M\00S\00G\00")
 (data (i32.const 3164) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00B\00U\00S\00Y\00\00\00\00\00")
 (data (i32.const 3196) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00C\00A\00N\00C\00E\00L\00E\00D\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3244) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00C\00H\00I\00L\00D\00\00\00")
 (data (i32.const 3276) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00C\00O\00N\00N\00A\00B\00O\00R\00T\00E\00D\00\00\00\00\00\00\00")
 (data (i32.const 3324) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00C\00O\00N\00N\00R\00E\00F\00U\00S\00E\00D\00\00\00\00\00\00\00")
 (data (i32.const 3372) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00C\00O\00N\00N\00R\00E\00S\00E\00T\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3420) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00D\00E\00A\00D\00L\00K\00")
 (data (i32.const 3452) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00D\00E\00S\00T\00A\00D\00D\00R\00R\00E\00Q\00\00\00\00\00\00\00")
 (data (i32.const 3500) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00D\00O\00M\00\00\00\00\00\00\00")
 (data (i32.const 3532) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00D\00Q\00U\00O\00T\00\00\00")
 (data (i32.const 3564) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00E\00X\00I\00S\00T\00\00\00")
 (data (i32.const 3596) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00F\00A\00U\00L\00T\00\00\00")
 (data (i32.const 3628) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00F\00B\00I\00G\00\00\00\00\00")
 (data (i32.const 3660) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00H\00O\00S\00T\00U\00N\00R\00E\00A\00C\00H\00\00\00\00\00\00\00")
 (data (i32.const 3708) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00I\00D\00R\00M\00\00\00\00\00")
 (data (i32.const 3740) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00I\00L\00S\00E\00Q\00\00\00")
 (data (i32.const 3772) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00I\00N\00P\00R\00O\00G\00R\00E\00S\00S\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3820) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00I\00N\00T\00R\00\00\00\00\00")
 (data (i32.const 3852) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00I\00N\00V\00A\00L\00\00\00")
 (data (i32.const 3884) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00I\00O\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3916) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00I\00S\00C\00O\00N\00N\00")
 (data (i32.const 3948) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00I\00S\00D\00I\00R\00\00\00")
 (data (i32.const 3980) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00L\00O\00O\00P\00\00\00\00\00")
 (data (i32.const 4012) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00M\00F\00I\00L\00E\00\00\00")
 (data (i32.const 4044) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00M\00L\00I\00N\00K\00\00\00")
 (data (i32.const 4076) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00M\00S\00G\00S\00I\00Z\00E\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4124) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00M\00U\00L\00T\00I\00H\00O\00P\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4172) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00N\00A\00M\00E\00T\00O\00O\00L\00O\00N\00G\00\00\00\00\00\00\00")
 (data (i32.const 4220) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00N\00E\00T\00D\00O\00W\00N\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4268) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00N\00E\00T\00R\00E\00S\00E\00T\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4316) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00N\00E\00T\00U\00N\00R\00E\00A\00C\00H\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4364) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00N\00F\00I\00L\00E\00\00\00")
 (data (i32.const 4396) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00N\00O\00B\00U\00F\00S\00")
 (data (i32.const 4428) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00N\00O\00D\00E\00V\00\00\00")
 (data (i32.const 4460) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00N\00O\00E\00N\00T\00\00\00")
 (data (i32.const 4492) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00N\00O\00E\00X\00E\00C\00")
 (data (i32.const 4524) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00N\00O\00L\00C\00K\00\00\00")
 (data (i32.const 4556) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00N\00O\00L\00I\00N\00K\00")
 (data (i32.const 4588) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00N\00O\00M\00E\00M\00\00\00")
 (data (i32.const 4620) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00N\00O\00M\00S\00G\00\00\00")
 (data (i32.const 4652) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00N\00O\00P\00R\00O\00T\00O\00O\00P\00T\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4700) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00N\00O\00S\00P\00C\00\00\00")
 (data (i32.const 4732) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00N\00O\00S\00Y\00S\00\00\00")
 (data (i32.const 4764) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00N\00O\00T\00C\00O\00N\00N\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4812) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00N\00O\00T\00D\00I\00R\00")
 (data (i32.const 4844) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00N\00O\00T\00E\00M\00P\00T\00Y\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4892) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00N\00O\00T\00R\00E\00C\00O\00V\00E\00R\00A\00B\00L\00E\00")
 (data (i32.const 4940) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00N\00O\00T\00S\00O\00C\00K\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4988) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00N\00O\00T\00S\00U\00P\00")
 (data (i32.const 5020) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00N\00O\00T\00T\00Y\00\00\00")
 (data (i32.const 5052) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00N\00X\00I\00O\00\00\00\00\00")
 (data (i32.const 5084) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00O\00V\00E\00R\00F\00L\00O\00W\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5132) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00O\00W\00N\00E\00R\00D\00E\00A\00D\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5180) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00P\00E\00R\00M\00\00\00\00\00")
 (data (i32.const 5212) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00P\00I\00P\00E\00\00\00\00\00")
 (data (i32.const 5244) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00P\00R\00O\00T\00O\00\00\00")
 (data (i32.const 5276) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00P\00R\00O\00T\00O\00N\00O\00S\00U\00P\00P\00O\00R\00T\00")
 (data (i32.const 5324) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00P\00R\00O\00T\00O\00T\00Y\00P\00E\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5372) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00R\00A\00N\00G\00E\00\00\00")
 (data (i32.const 5404) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00R\00O\00F\00S\00\00\00\00\00")
 (data (i32.const 5436) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00S\00P\00I\00P\00E\00\00\00")
 (data (i32.const 5468) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00S\00R\00C\00H\00\00\00\00\00")
 (data (i32.const 5500) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00S\00T\00A\00L\00E\00\00\00")
 (data (i32.const 5532) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00T\00I\00M\00E\00D\00O\00U\00T\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5580) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00T\00X\00T\00B\00S\00Y\00")
 (data (i32.const 5612) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00X\00D\00E\00V\00\00\00\00\00")
 (data (i32.const 5644) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00N\00O\00T\00C\00A\00P\00A\00B\00L\00E\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5692) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00U\00N\00K\00N\00O\00W\00N\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5740) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00~\00l\00i\00b\00/\00w\00a\00s\00i\00_\00p\00r\00o\00c\00e\00s\00s\00.\00t\00s\00\00\00\00\00")
 (data (i32.const 5804) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5836) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00V\00\00\00P\00r\00e\00s\00s\00 \00c\00t\00r\00l\00+\00c\00 \00t\00o\00 \00e\00x\00i\00t\00 \00t\00h\00i\00s\00 \00d\00e\00m\00o\00 \00a\00t\00 \00a\00n\00y\00 \00t\00i\00m\00e\00.\00\00\00\00\00\00\00")
 (data (i32.const 5948) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\01\00\00\00\16\00\00\00\00\00\00\00")
 (data (i32.const 5980) ",\00\00\00\03\00\00\00\00\00\00\00\05\00\00\00\1c\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00\00\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00")
 (data (i32.const 6028) "\ac\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\9c\00\00\00\n\00W\00A\00S\00I\00 \00c\00a\00n\00 \00r\00e\00a\00d\00 \00t\00h\00e\00 \00s\00y\00s\00t\00e\00m\00 \00t\00i\00m\00e\00 \00a\00n\00d\00 \00d\00i\00s\00p\00l\00a\00y\00 \00i\00t\00 \00w\00i\00t\00h\00 \00t\00h\00e\00 \00A\00s\00s\00e\00m\00b\00l\00y\00S\00c\00r\00i\00p\00t\00 \00D\00a\00t\00e\00 \00A\00P\00I\00")
 (data (i32.const 6204) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00T\00h\00e\00 \00c\00u\00r\00r\00e\00n\00t\00 \00t\00i\00m\00e\00 \00i\00s\00:\00 \00\00\00")
 (data (i32.const 6268) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\01\00\00\00\16\00\00\00\00\00\00\00")
 (data (i32.const 6300) ",\00\00\00\03\00\00\00\00\00\00\00\05\00\00\00\1c\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00\00\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00")
 (data (i32.const 6348) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00D\00a\00t\00e\00\00\00\00\00")
 (data (i32.const 6396) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00~\00l\00i\00b\00/\00d\00a\00t\00e\00.\00t\00s\00\00\00\00\00")
 (data (i32.const 6444) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00~\00l\00i\00b\00/\00w\00a\00s\00i\00_\00d\00a\00t\00e\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6508) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6540) "\1c\00\00\00\03\00\00\00\00\00\00\00\05\00\00\00\0c\00\00\00\00\00\00\00\80\19\00\00\00\00\00\00")
 (data (i32.const 6572) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00S\00u\00n\00 \00\00\00\00\00")
 (data (i32.const 6604) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00M\00o\00n\00 \00\00\00\00\00")
 (data (i32.const 6636) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00T\00u\00e\00 \00\00\00\00\00")
 (data (i32.const 6668) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00W\00e\00d\00 \00\00\00\00\00")
 (data (i32.const 6700) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00T\00h\00u\00 \00\00\00\00\00")
 (data (i32.const 6732) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00F\00r\00i\00 \00\00\00\00\00")
 (data (i32.const 6764) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00S\00a\00t\00 \00\00\00\00\00")
 (data (i32.const 6796) ",\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\1c\00\00\00\c0\19\00\00\e0\19\00\00\00\1a\00\00 \1a\00\00@\1a\00\00`\1a\00\00\80\1a\00\00")
 (data (i32.const 6844) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00J\00a\00n\00 \00\00\00\00\00")
 (data (i32.const 6876) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00F\00e\00b\00 \00\00\00\00\00")
 (data (i32.const 6908) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00M\00a\00r\00 \00\00\00\00\00")
 (data (i32.const 6940) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00A\00p\00r\00 \00\00\00\00\00")
 (data (i32.const 6972) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00M\00a\00y\00 \00\00\00\00\00")
 (data (i32.const 7004) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00J\00u\00n\00 \00\00\00\00\00")
 (data (i32.const 7036) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00J\00u\00l\00 \00\00\00\00\00")
 (data (i32.const 7068) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00A\00u\00g\00 \00\00\00\00\00")
 (data (i32.const 7100) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00S\00e\00p\00 \00\00\00\00\00")
 (data (i32.const 7132) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00O\00c\00t\00 \00\00\00\00\00")
 (data (i32.const 7164) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00N\00o\00v\00 \00\00\00\00\00")
 (data (i32.const 7196) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00D\00e\00c\00 \00\00\00\00\00")
 (data (i32.const 7228) "L\00\00\00\00\00\00\00\00\00\00\00\05\00\00\000\00\00\00\d0\1a\00\00\f0\1a\00\00\10\1b\00\000\1b\00\00P\1b\00\00p\1b\00\00\90\1b\00\00\b0\1b\00\00\d0\1b\00\00\f0\1b\00\00\10\1c\00\000\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7308) "\00\03\02\05\00\03\05\01\04\06\02\04")
 (data (i32.const 7324) ",\00\00\00\03\00\00\00\00\00\00\00\05\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7372) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00 \00-\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7404) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00:\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7436) ",\00\00\00\03\00\00\00\00\00\00\00\05\00\00\00\14\00\00\00\00\00\00\00\00\1d\00\00\00\00\00\00\00\1d\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7484) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\03\00\00\00\17\00\00\00\00\00\00\00")
 (data (i32.const 7516) ",\00\00\00\03\00\00\00\00\00\00\00\05\00\00\00\1c\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00\00\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00")
 (data (i32.const 7564) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 7612) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 7676) "\9c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00~\00\00\00\n\00W\00A\00S\00I\00 \00c\00a\00n\00 \00r\00e\00a\00d\00 \00u\00s\00e\00r\00 \00i\00n\00p\00u\00t\00 \00f\00r\00o\00m\00 \00s\00t\00d\00i\00n\00.\00 \00W\00r\00i\00t\00e\00 \00a\00n\00y\00 \00w\00o\00r\00d\00 \00a\00n\00d\00 \00r\00e\00t\00u\00r\00n\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7836) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00Y\00o\00u\00 \00s\00a\00i\00d\00:\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 7884) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\1f\00\00\00\'\00\00\00\00\00\00\00")
 (data (i32.const 7916) ",\00\00\00\03\00\00\00\00\00\00\00\05\00\00\00\1c\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00\00\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00")
 (data (i32.const 7964) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00@\00\00\00\n\00P\00l\00e\00a\00s\00e\00 \00p\00r\00e\00s\00s\00 \00r\00e\00t\00u\00r\00n\00 \00t\00o\00 \00c\00o\00n\00t\00i\00n\00u\00e\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8060) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\03\00\00\00\17\00\00\00\00\00\00\00")
 (data (i32.const 8092) ",\00\00\00\03\00\00\00\00\00\00\00\05\00\00\00\1c\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00\00\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00")
 (data (i32.const 8140) "\dc\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\be\00\00\00W\00A\00S\00I\00 \00c\00a\00n\00 \00f\00e\00t\00c\00h\00 \00c\00r\00y\00p\00t\00o\00g\00r\00a\00p\00h\00i\00c\00a\00l\00l\00y\00-\00s\00a\00f\00e\00 \00r\00a\00n\00d\00o\00m\00 \00n\00u\00m\00b\00e\00r\00s\00 \00f\00r\00o\00m\00 \00t\00h\00e\00 \00r\00u\00n\00t\00i\00m\00e\00\n\00S\00e\00r\00i\00e\00s\00 \00o\00f\00 \00r\00a\00n\00d\00o\00m\00 \00n\00u\00m\00b\00e\00r\00s\00:\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8364) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\000\00.\000\00\00\00\00\00\00\00")
 (data (i32.const 8396) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00N\00a\00N\00\00\00\00\00\00\00")
 (data (i32.const 8428) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00-\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8476) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8528) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8584) "\88\02\1c\08\a0\d5\8f\fav\bf>\a2\7f\e1\ae\bav\acU0 \fb\16\8b\ea5\ce]J\89B\cf-;eU\aa\b0k\9a\dfE\1a=\03\cf\1a\e6\ca\c6\9a\c7\17\fep\abO\dc\bc\be\fc\b1w\ff\0c\d6kA\ef\91V\be<\fc\7f\90\ad\1f\d0\8d\83\9aU1(\\Q\d3\b5\c9\a6\ad\8f\acq\9d\cb\8b\ee#w\"\9c\eamSx@\91I\cc\aeW\ce\b6]y\12<\827V\fbM6\94\10\c2O\98H8o\ea\96\90\c7:\82%\cb\85t\d7\f4\97\bf\97\cd\cf\86\a0\e5\ac*\17\98\n4\ef\8e\b25*\fbg8\b2;?\c6\d2\df\d4\c8\84\ba\cd\d3\1a\'D\dd\c5\96\c9%\bb\ce\9fk\93\84\a5b}$l\ac\db\f6\da_\rXf\ab\a3&\f1\c3\de\93\f8\e2\f3\b8\80\ff\aa\a8\ad\b5\b5\8bJ|l\05_b\87S0\c14`\ff\bc\c9U&\ba\91\8c\85N\96\bd~)p$w\f9\df\8f\b8\e5\b8\9f\bd\df\a6\94}t\88\cf_\a9\f8\cf\9b\a8\8f\93pD\b9k\15\0f\bf\f8\f0\08\8a\b611eU%\b0\cd\ac\7f{\d0\c6\e2?\99\06;+*\c4\10\\\e4\d3\92si\99$$\aa\0e\ca\00\83\f2\b5\87\fd\eb\1a\11\92d\08\e5\bc\cc\88Po\t\cc\bc\8c,e\19\e2X\17\b7\d1\00\00\00\00\00\00@\9c\00\00\00\00\10\a5\d4\e8\00\00b\ac\c5\ebx\ad\84\t\94\f8x9?\81\b3\15\07\c9{\ce\97\c0p\\\ea{\ce2~\8fh\80\e9\ab\a48\d2\d5E\"\9a\17&\'O\9f\'\fb\c4\d41\a2c\ed\a8\ad\c8\8c8e\de\b0\dbe\ab\1a\8e\08\c7\83\9a\1dqB\f9\1d]\c4X\e7\1b\a6,iM\92\ea\8dp\1ad\ee\01\daJw\ef\9a\99\a3m\a2\85k}\b4{x\t\f2w\18\ddy\a1\e4T\b4\c2\c5\9b[\92\86[\86=]\96\c8\c5S5\c8\b3\a0\97\fa\\\b4*\95\e3_\a0\99\bd\9fF\de%\8c9\db4\c2\9b\a5\\\9f\98\a3r\9a\c6\f6\ce\be\e9TS\bf\dc\b7\e2A\"\f2\17\f3\fc\88\a5x\\\d3\9b\ce \cc\dfS!{\f3Z\16\98:0\1f\97\dc\b5\a0\e2\96\b3\e3\\S\d1\d9\a8<D\a7\a4\d9|\9b\fb\10D\a4\a7LLv\bb\1a\9c@\b6\ef\8e\ab\8b,\84W\a6\10\ef\1f\d0)1\91\e9\e5\a4\10\9b\9d\0c\9c\a1\fb\9b\10\e7)\f4;b\d9 (\ac\85\cf\a7z^KD\80-\dd\ac\03@\e4!\bf\8f\ffD^/\9cg\8eA\b8\8c\9c\9d\173\d4\a9\1b\e3\b4\92\db\19\9e\d9w\df\ban\bf\96\ebk\ee\f0\9b;\02\87\af")
 (data (i32.const 9280) "<\fbW\fbr\fb\8c\fb\a7\fb\c1\fb\dc\fb\f6\fb\11\fc,\fcF\fca\fc{\fc\96\fc\b1\fc\cb\fc\e6\fc\00\fd\1b\fd5\fdP\fdk\fd\85\fd\a0\fd\ba\fd\d5\fd\ef\fd\n\fe%\fe?\feZ\fet\fe\8f\fe\a9\fe\c4\fe\df\fe\f9\fe\14\ff.\ffI\ffc\ff~\ff\99\ff\b3\ff\ce\ff\e8\ff\03\00\1e\008\00S\00m\00\88\00\a2\00\bd\00\d8\00\f2\00\r\01\'\01B\01\\\01w\01\92\01\ac\01\c7\01\e1\01\fc\01\16\021\02L\02f\02\81\02\9b\02\b6\02\d0\02\eb\02\06\03 \03;\03U\03p\03\8b\03\a5\03\c0\03\da\03\f5\03\0f\04*\04")
 (data (i32.const 9456) "\01\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\ca\9a;")
 (data (i32.const 9500) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00\n\00T\00h\00a\00t\00\'\00s\00 \00a\00l\00l\00!\00 \00:\00D\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9564) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\1f\00\00\00\'\00\00\00\00\00\00\00")
 (data (i32.const 9596) ",\00\00\00\03\00\00\00\00\00\00\00\05\00\00\00\1c\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00\00\00\00\00\c0\02\00\00\00\00\00\00\e0\02\00\00")
 (data (i32.const 9648) "\08\00\00\00 \00\00\00 \00\00\00 \00\00\00\00\00\00\00\02\t\00\00\04A\00\00 \00\00\00 \00\00\00")
 (table $0 1 1 funcref)
 (elem $0 (i32.const 1))
 (export "memory" (memory $0))
 (export "_start" (func $~start))
 (func $~lib/bindings/wasi_snapshot_preview1/iovec#set:buf (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/rt/common/OBJECT#get:rtSize (param $0 i32) (result i32)
  local.get $0
  i32.load $0 offset=16
 )
 (func $~lib/string/String#get:length (param $0 i32) (result i32)
  local.get $0
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 1
  i32.shr_u
  return
 )
 (func $~lib/util/string/compareImpl (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.set $5
  local.get $2
  local.get $3
  i32.const 1
  i32.shl
  i32.add
  local.set $6
  i32.const 0
  i32.const 2
  i32.lt_s
  drop
  local.get $4
  i32.const 4
  i32.ge_u
  if (result i32)
   local.get $5
   i32.const 7
   i32.and
   local.get $6
   i32.const 7
   i32.and
   i32.or
   i32.eqz
  else
   i32.const 0
  end
  if
   block $do-break|0
    loop $do-loop|0
     local.get $5
     i64.load $0
     local.get $6
     i64.load $0
     i64.ne
     if
      br $do-break|0
     end
     local.get $5
     i32.const 8
     i32.add
     local.set $5
     local.get $6
     i32.const 8
     i32.add
     local.set $6
     local.get $4
     i32.const 4
     i32.sub
     local.set $4
     local.get $4
     i32.const 4
     i32.ge_u
     br_if $do-loop|0
    end
   end
  end
  loop $while-continue|1
   local.get $4
   local.tee $7
   i32.const 1
   i32.sub
   local.set $4
   local.get $7
   if
    local.get $5
    i32.load16_u $0
    local.set $8
    local.get $6
    i32.load16_u $0
    local.set $9
    local.get $8
    local.get $9
    i32.ne
    if
     local.get $8
     local.get $9
     i32.sub
     return
    end
    local.get $5
    i32.const 2
    i32.add
    local.set $5
    local.get $6
    i32.const 2
    i32.add
    local.set $6
    br $while-continue|1
   end
  end
  i32.const 0
  return
 )
 (func $~lib/string/String.UTF8.encodeUnsafe (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.set $5
  local.get $2
  local.set $6
  loop $while-continue|0
   local.get $0
   local.get $5
   i32.lt_u
   if
    local.get $0
    i32.load16_u $0
    local.set $7
    local.get $7
    i32.const 128
    i32.lt_u
    if
     local.get $6
     local.get $7
     i32.store8 $0
     local.get $6
     i32.const 1
     i32.add
     local.set $6
     local.get $3
     local.get $7
     i32.eqz
     i32.and
     if
      local.get $6
      local.get $2
      i32.sub
      return
     end
    else
     local.get $7
     i32.const 2048
     i32.lt_u
     if
      local.get $7
      i32.const 6
      i32.shr_u
      i32.const 192
      i32.or
      local.set $8
      local.get $7
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      local.set $9
      local.get $6
      local.get $9
      i32.const 8
      i32.shl
      local.get $8
      i32.or
      i32.store16 $0
      local.get $6
      i32.const 2
      i32.add
      local.set $6
     else
      local.get $7
      i32.const 63488
      i32.and
      i32.const 55296
      i32.eq
      if
       local.get $7
       i32.const 56320
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 2
        i32.add
        local.get $5
        i32.lt_u
       else
        i32.const 0
       end
       if
        local.get $0
        i32.load16_u $0 offset=2
        local.set $10
        local.get $10
        i32.const 64512
        i32.and
        i32.const 56320
        i32.eq
        if
         i32.const 65536
         local.get $7
         i32.const 1023
         i32.and
         i32.const 10
         i32.shl
         i32.add
         local.get $10
         i32.const 1023
         i32.and
         i32.or
         local.set $7
         local.get $7
         i32.const 18
         i32.shr_u
         i32.const 240
         i32.or
         local.set $11
         local.get $7
         i32.const 12
         i32.shr_u
         i32.const 63
         i32.and
         i32.const 128
         i32.or
         local.set $12
         local.get $7
         i32.const 6
         i32.shr_u
         i32.const 63
         i32.and
         i32.const 128
         i32.or
         local.set $13
         local.get $7
         i32.const 63
         i32.and
         i32.const 128
         i32.or
         local.set $14
         local.get $6
         local.get $14
         i32.const 24
         i32.shl
         local.get $13
         i32.const 16
         i32.shl
         i32.or
         local.get $12
         i32.const 8
         i32.shl
         i32.or
         local.get $11
         i32.or
         i32.store $0
         local.get $6
         i32.const 4
         i32.add
         local.set $6
         local.get $0
         i32.const 4
         i32.add
         local.set $0
         br $while-continue|0
        end
       end
       local.get $4
       i32.const 0
       i32.ne
       if
        local.get $4
        i32.const 2
        i32.eq
        if
         i32.const 192
         i32.const 256
         i32.const 742
         i32.const 49
         call $~lib/wasi_internal/wasi_abort
         unreachable
        end
        i32.const 65533
        local.set $7
       end
      end
      local.get $7
      i32.const 12
      i32.shr_u
      i32.const 224
      i32.or
      local.set $15
      local.get $7
      i32.const 6
      i32.shr_u
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      local.set $16
      local.get $7
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      local.set $17
      local.get $6
      local.get $16
      i32.const 8
      i32.shl
      local.get $15
      i32.or
      i32.store16 $0
      local.get $6
      local.get $17
      i32.store8 $0 offset=2
      local.get $6
      i32.const 3
      i32.add
      local.set $6
     end
    end
    local.get $0
    i32.const 2
    i32.add
    local.set $0
    br $while-continue|0
   end
  end
  local.get $3
  if
   local.get $6
   local.tee $18
   i32.const 1
   i32.add
   local.set $6
   local.get $18
   i32.const 0
   i32.store8 $0
  end
  local.get $6
  local.get $2
  i32.sub
  return
 )
 (func $~lib/string/String.UTF8.encodeUnsafe@varargs (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 3
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $3
   end
   i32.const 0
   local.set $4
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $~lib/string/String.UTF8.encodeUnsafe
 )
 (func $~lib/util/number/decimalCount32 (param $0 i32) (result i32)
  local.get $0
  i32.const 100000
  i32.lt_u
  if
   local.get $0
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    local.get $0
    i32.const 10
    i32.ge_u
    i32.add
    return
   else
    i32.const 3
    local.get $0
    i32.const 10000
    i32.ge_u
    i32.add
    local.get $0
    i32.const 1000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $0
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    local.get $0
    i32.const 1000000
    i32.ge_u
    i32.add
    return
   else
    i32.const 8
    local.get $0
    i32.const 1000000000
    i32.ge_u
    i32.add
    local.get $0
    i32.const 100000000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/bindings/wasi_snapshot_preview1/iovec#set:buf_len (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/rt/itcms/Object#set:nextWithColor (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/rt/itcms/Object#set:prev (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/rt/itcms/initLazy (param $0 i32) (result i32)
  local.get $0
  local.get $0
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $0
  local.get $0
  call $~lib/rt/itcms/Object#set:prev
  local.get $0
  return
 )
 (func $~lib/rt/itcms/Object#get:nextWithColor (param $0 i32) (result i32)
  local.get $0
  i32.load $0 offset=4
 )
 (func $~lib/rt/itcms/Object#get:next (param $0 i32) (result i32)
  local.get $0
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  return
 )
 (func $~lib/rt/itcms/Object#get:color (param $0 i32) (result i32)
  local.get $0
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.and
  return
 )
 (func $~lib/rt/itcms/visitRoots (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/__visit_globals
  global.get $~lib/rt/itcms/pinSpace
  local.set $1
  local.get $1
  call $~lib/rt/itcms/Object#get:next
  local.set $2
  loop $while-continue|0
   local.get $2
   local.get $1
   i32.ne
   if
    i32.const 1
    drop
    local.get $2
    call $~lib/rt/itcms/Object#get:color
    i32.const 3
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 368
     i32.const 160
     i32.const 16
     call $~lib/wasi_internal/wasi_abort
     unreachable
    end
    local.get $2
    i32.const 20
    i32.add
    local.get $0
    call $~lib/rt/__visit_members
    local.get $2
    call $~lib/rt/itcms/Object#get:next
    local.set $2
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#set:color (param $0 i32) (param $1 i32)
  local.get $0
  local.get $0
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $1
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#get:prev (param $0 i32) (result i32)
  local.get $0
  i32.load $0 offset=8
 )
 (func $~lib/rt/itcms/Object#set:next (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  local.get $0
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.and
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#unlink (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/itcms/Object#get:next
  local.set $1
  local.get $1
  i32.const 0
  i32.eq
  if
   i32.const 1
   drop
   local.get $0
   call $~lib/rt/itcms/Object#get:prev
   i32.const 0
   i32.eq
   if (result i32)
    local.get $0
    global.get $~lib/memory/__heap_base
    i32.lt_u
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 368
    i32.const 128
    i32.const 18
    call $~lib/wasi_internal/wasi_abort
    unreachable
   end
   return
  end
  local.get $0
  call $~lib/rt/itcms/Object#get:prev
  local.set $2
  i32.const 1
  drop
  local.get $2
  i32.eqz
  if
   i32.const 0
   i32.const 368
   i32.const 132
   i32.const 16
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $1
  local.get $2
  call $~lib/rt/itcms/Object#set:prev
  local.get $2
  local.get $1
  call $~lib/rt/itcms/Object#set:next
 )
 (func $~lib/rt/itcms/Object#get:rtId (param $0 i32) (result i32)
  local.get $0
  i32.load $0 offset=12
 )
 (func $~lib/shared/typeinfo/Typeinfo#get:flags (param $0 i32) (result i32)
  local.get $0
  i32.load $0
 )
 (func $~lib/rt/__typeinfo (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/rt/__rtti_base
  local.set $1
  local.get $0
  local.get $1
  i32.load $0
  i32.gt_u
  if
   i32.const 496
   i32.const 560
   i32.const 21
   i32.const 28
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $0
  i32.const 4
  i32.mul
  i32.add
  call $~lib/shared/typeinfo/Typeinfo#get:flags
  return
 )
 (func $~lib/rt/itcms/Object#get:isPointerfree (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/rt/itcms/Object#get:rtId
  local.set $1
  local.get $1
  i32.const 2
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $1
   call $~lib/rt/__typeinfo
   i32.const 32
   i32.and
   i32.const 0
   i32.ne
  end
  return
 )
 (func $~lib/rt/itcms/Object#linkTo (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/itcms/Object#get:prev
  local.set $3
  local.get $0
  local.get $1
  local.get $2
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $0
  local.get $3
  call $~lib/rt/itcms/Object#set:prev
  local.get $3
  local.get $0
  call $~lib/rt/itcms/Object#set:next
  local.get $1
  local.get $0
  call $~lib/rt/itcms/Object#set:prev
 )
 (func $~lib/rt/itcms/Object#makeGray (param $0 i32)
  (local $1 i32)
  local.get $0
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $0
   call $~lib/rt/itcms/Object#get:prev
   local.tee $1
   i32.eqz
   if (result i32)
    i32.const 0
    i32.const 368
    i32.const 148
    i32.const 30
    call $~lib/wasi_internal/wasi_abort
    unreachable
   else
    local.get $1
   end
   global.set $~lib/rt/itcms/iter
  end
  local.get $0
  call $~lib/rt/itcms/Object#unlink
  local.get $0
  global.get $~lib/rt/itcms/toSpace
  local.get $0
  call $~lib/rt/itcms/Object#get:isPointerfree
  if (result i32)
   global.get $~lib/rt/itcms/white
   i32.eqz
  else
   i32.const 2
  end
  call $~lib/rt/itcms/Object#linkTo
 )
 (func $~lib/rt/itcms/__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  local.set $2
  i32.const 0
  drop
  local.get $2
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $2
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/itcms/visitStack (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  local.set $1
  loop $while-continue|0
   local.get $1
   global.get $~lib/memory/__heap_base
   i32.lt_u
   if
    local.get $1
    i32.load $0
    local.get $0
    call $~lib/rt/itcms/__visit
    local.get $1
    i32.const 4
    i32.add
    local.set $1
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/common/BLOCK#get:mmInfo (param $0 i32) (result i32)
  local.get $0
  i32.load $0
 )
 (func $~lib/rt/itcms/Object#get:size (param $0 i32) (result i32)
  i32.const 4
  local.get $0
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
  return
 )
 (func $~lib/rt/tlsf/Root#set:flMap (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/rt/common/BLOCK#set:mmInfo (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/rt/tlsf/Block#set:prev (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/Block#set:next (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/rt/tlsf/Block#get:prev (param $0 i32) (result i32)
  local.get $0
  i32.load $0 offset=4
 )
 (func $~lib/rt/tlsf/Block#get:next (param $0 i32) (result i32)
  local.get $0
  i32.load $0 offset=8
 )
 (func $~lib/rt/tlsf/Root#get:flMap (param $0 i32) (result i32)
  local.get $0
  i32.load $0
 )
 (func $~lib/rt/tlsf/removeBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  local.get $1
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $2
  i32.const 1
  drop
  local.get $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 640
   i32.const 268
   i32.const 14
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $2
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $3
  i32.const 1
  drop
  local.get $3
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 640
   i32.const 270
   i32.const 14
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $3
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $4
   local.get $3
   i32.const 4
   i32.shr_u
   local.set $5
  else
   local.get $3
   local.tee $6
   i32.const 1073741820
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_u
   select
   local.set $8
   i32.const 31
   local.get $8
   i32.clz
   i32.sub
   local.set $4
   local.get $8
   local.get $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $5
   local.get $4
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $4
  end
  i32.const 1
  drop
  local.get $4
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $5
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 640
   i32.const 284
   i32.const 14
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $1
  call $~lib/rt/tlsf/Block#get:prev
  local.set $9
  local.get $1
  call $~lib/rt/tlsf/Block#get:next
  local.set $10
  local.get $9
  if
   local.get $9
   local.get $10
   call $~lib/rt/tlsf/Block#set:next
  end
  local.get $10
  if
   local.get $10
   local.get $9
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $1
  block $~lib/rt/tlsf/GETHEAD|inlined.0 (result i32)
   local.get $0
   local.set $11
   local.get $4
   local.set $12
   local.get $5
   local.set $13
   local.get $11
   local.get $12
   i32.const 4
   i32.shl
   local.get $13
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=96
   br $~lib/rt/tlsf/GETHEAD|inlined.0
  end
  i32.eq
  if
   local.get $0
   local.set $14
   local.get $4
   local.set $15
   local.get $5
   local.set $16
   local.get $10
   local.set $17
   local.get $14
   local.get $15
   i32.const 4
   i32.shl
   local.get $16
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $17
   i32.store $0 offset=96
   local.get $10
   i32.eqz
   if
    block $~lib/rt/tlsf/GETSL|inlined.0 (result i32)
     local.get $0
     local.set $18
     local.get $4
     local.set $19
     local.get $18
     local.get $19
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     br $~lib/rt/tlsf/GETSL|inlined.0
    end
    local.set $20
    local.get $0
    local.set $21
    local.get $4
    local.set $22
    local.get $20
    i32.const 1
    local.get $5
    i32.shl
    i32.const -1
    i32.xor
    i32.and
    local.tee $20
    local.set $23
    local.get $21
    local.get $22
    i32.const 2
    i32.shl
    i32.add
    local.get $23
    i32.store $0 offset=4
    local.get $20
    i32.eqz
    if
     local.get $0
     local.get $0
     call $~lib/rt/tlsf/Root#get:flMap
     i32.const 1
     local.get $4
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     call $~lib/rt/tlsf/Root#set:flMap
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  i32.const 1
  drop
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 640
   i32.const 201
   i32.const 14
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $1
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $2
  i32.const 1
  drop
  local.get $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 640
   i32.const 203
   i32.const 14
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  block $~lib/rt/tlsf/GETRIGHT|inlined.0 (result i32)
   local.get $1
   local.set $3
   local.get $3
   i32.const 4
   i32.add
   local.get $3
   call $~lib/rt/common/BLOCK#get:mmInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   br $~lib/rt/tlsf/GETRIGHT|inlined.0
  end
  local.set $4
  local.get $4
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $5
  local.get $5
  i32.const 1
  i32.and
  if
   local.get $0
   local.get $4
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $2
   i32.const 4
   i32.add
   local.get $5
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $2
   call $~lib/rt/common/BLOCK#set:mmInfo
   block $~lib/rt/tlsf/GETRIGHT|inlined.1 (result i32)
    local.get $1
    local.set $6
    local.get $6
    i32.const 4
    i32.add
    local.get $6
    call $~lib/rt/common/BLOCK#get:mmInfo
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    br $~lib/rt/tlsf/GETRIGHT|inlined.1
   end
   local.set $4
   local.get $4
   call $~lib/rt/common/BLOCK#get:mmInfo
   local.set $5
  end
  local.get $2
  i32.const 2
  i32.and
  if
   block $~lib/rt/tlsf/GETFREELEFT|inlined.0 (result i32)
    local.get $1
    local.set $7
    local.get $7
    i32.const 4
    i32.sub
    i32.load $0
    br $~lib/rt/tlsf/GETFREELEFT|inlined.0
   end
   local.set $8
   local.get $8
   call $~lib/rt/common/BLOCK#get:mmInfo
   local.set $9
   i32.const 1
   drop
   local.get $9
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 640
    i32.const 221
    i32.const 16
    call $~lib/wasi_internal/wasi_abort
    unreachable
   end
   local.get $0
   local.get $8
   call $~lib/rt/tlsf/removeBlock
   local.get $8
   local.set $1
   local.get $1
   local.get $9
   i32.const 4
   i32.add
   local.get $2
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $2
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
  local.get $4
  local.get $5
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $2
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $10
  i32.const 1
  drop
  local.get $10
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 640
   i32.const 233
   i32.const 14
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  i32.const 1
  drop
  local.get $1
  i32.const 4
  i32.add
  local.get $10
  i32.add
  local.get $4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 640
   i32.const 234
   i32.const 14
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  local.get $1
  i32.store $0
  local.get $10
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $11
   local.get $10
   i32.const 4
   i32.shr_u
   local.set $12
  else
   local.get $10
   local.tee $13
   i32.const 1073741820
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_u
   select
   local.set $15
   i32.const 31
   local.get $15
   i32.clz
   i32.sub
   local.set $11
   local.get $15
   local.get $11
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $12
   local.get $11
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $11
  end
  i32.const 1
  drop
  local.get $11
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $12
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 640
   i32.const 251
   i32.const 14
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  block $~lib/rt/tlsf/GETHEAD|inlined.1 (result i32)
   local.get $0
   local.set $16
   local.get $11
   local.set $17
   local.get $12
   local.set $18
   local.get $16
   local.get $17
   i32.const 4
   i32.shl
   local.get $18
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=96
   br $~lib/rt/tlsf/GETHEAD|inlined.1
  end
  local.set $19
  local.get $1
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $1
  local.get $19
  call $~lib/rt/tlsf/Block#set:next
  local.get $19
  if
   local.get $19
   local.get $1
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $0
  local.set $20
  local.get $11
  local.set $21
  local.get $12
  local.set $22
  local.get $1
  local.set $23
  local.get $20
  local.get $21
  i32.const 4
  i32.shl
  local.get $22
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $23
  i32.store $0 offset=96
  local.get $0
  local.get $0
  call $~lib/rt/tlsf/Root#get:flMap
  i32.const 1
  local.get $11
  i32.shl
  i32.or
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $0
  local.set $26
  local.get $11
  local.set $27
  block $~lib/rt/tlsf/GETSL|inlined.1 (result i32)
   local.get $0
   local.set $24
   local.get $11
   local.set $25
   local.get $24
   local.get $25
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=4
   br $~lib/rt/tlsf/GETSL|inlined.1
  end
  i32.const 1
  local.get $12
  i32.shl
  i32.or
  local.set $28
  local.get $26
  local.get $27
  i32.const 2
  i32.shl
  i32.add
  local.get $28
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  i32.const 1
  drop
  local.get $1
  local.get $2
  i32.le_u
  i32.eqz
  if
   i32.const 0
   i32.const 640
   i32.const 377
   i32.const 14
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $1
  local.get $2
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $2
  block $~lib/rt/tlsf/GETTAIL|inlined.0 (result i32)
   local.get $0
   local.set $3
   local.get $3
   i32.load $0 offset=1568
   br $~lib/rt/tlsf/GETTAIL|inlined.0
  end
  local.set $4
  i32.const 0
  local.set $5
  local.get $4
  if
   i32.const 1
   drop
   local.get $1
   local.get $4
   i32.const 4
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 640
    i32.const 384
    i32.const 16
    call $~lib/wasi_internal/wasi_abort
    unreachable
   end
   local.get $1
   i32.const 16
   i32.sub
   local.get $4
   i32.eq
   if
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
    local.get $4
    call $~lib/rt/common/BLOCK#get:mmInfo
    local.set $5
   else
    nop
   end
  else
   i32.const 1
   drop
   local.get $1
   local.get $0
   i32.const 1572
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 640
    i32.const 397
    i32.const 5
    call $~lib/wasi_internal/wasi_abort
    unreachable
   end
  end
  local.get $2
  local.get $1
  i32.sub
  local.set $6
  local.get $6
  i32.const 4
  i32.const 12
  i32.add
  i32.const 4
  i32.add
  i32.lt_u
  if
   i32.const 0
   return
  end
  local.get $6
  i32.const 2
  i32.const 4
  i32.mul
  i32.sub
  local.set $7
  local.get $1
  local.set $8
  local.get $8
  local.get $7
  i32.const 1
  i32.or
  local.get $5
  i32.const 2
  i32.and
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $8
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $8
  i32.const 0
  call $~lib/rt/tlsf/Block#set:next
  local.get $1
  i32.const 4
  i32.add
  local.get $7
  i32.add
  local.set $4
  local.get $4
  i32.const 0
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $0
  local.set $9
  local.get $4
  local.set $10
  local.get $9
  local.get $10
  i32.store $0 offset=1568
  local.get $0
  local.get $8
  call $~lib/rt/tlsf/insertBlock
  i32.const 1
  return
 )
 (func $~lib/rt/tlsf/initialize
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  i32.const 0
  drop
  global.get $~lib/memory/__heap_base
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $0
  memory.size $0
  local.set $1
  local.get $0
  i32.const 1572
  i32.add
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $2
  local.get $2
  local.get $1
  i32.gt_s
  if (result i32)
   local.get $2
   local.get $1
   i32.sub
   memory.grow $0
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  local.get $0
  local.set $3
  local.get $3
  i32.const 0
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $3
  local.set $4
  i32.const 0
  local.set $5
  local.get $4
  local.get $5
  i32.store $0 offset=1568
  i32.const 0
  local.set $6
  loop $for-loop|0
   local.get $6
   i32.const 23
   i32.lt_u
   if
    local.get $3
    local.set $7
    local.get $6
    local.set $8
    i32.const 0
    local.set $9
    local.get $7
    local.get $8
    i32.const 2
    i32.shl
    i32.add
    local.get $9
    i32.store $0 offset=4
    i32.const 0
    local.set $10
    loop $for-loop|1
     local.get $10
     i32.const 16
     i32.lt_u
     if
      local.get $3
      local.set $11
      local.get $6
      local.set $12
      local.get $10
      local.set $13
      i32.const 0
      local.set $14
      local.get $11
      local.get $12
      i32.const 4
      i32.shl
      local.get $13
      i32.add
      i32.const 2
      i32.shl
      i32.add
      local.get $14
      i32.store $0 offset=96
      local.get $10
      i32.const 1
      i32.add
      local.set $10
      br $for-loop|1
     end
    end
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  local.get $0
  i32.const 1572
  i32.add
  local.set $15
  i32.const 0
  drop
  local.get $3
  local.get $15
  memory.size $0
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
  local.get $3
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/checkUsedBlock (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.const 0
  i32.ne
  if (result i32)
   local.get $0
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $1
   call $~lib/rt/common/BLOCK#get:mmInfo
   i32.const 1
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 640
   i32.const 559
   i32.const 3
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $1
  return
 )
 (func $~lib/rt/tlsf/freeBlock (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $1
  local.get $1
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 1
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/__free (param $0 i32)
  local.get $0
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $0
  call $~lib/rt/tlsf/checkUsedBlock
  call $~lib/rt/tlsf/freeBlock
 )
 (func $~lib/rt/itcms/free (param $0 i32)
  local.get $0
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/Object#set:nextWithColor
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/Object#set:prev
  else
   global.get $~lib/rt/itcms/total
   local.get $0
   call $~lib/rt/itcms/Object#get:size
   i32.sub
   global.set $~lib/rt/itcms/total
   i32.const 0
   drop
   local.get $0
   i32.const 4
   i32.add
   call $~lib/rt/tlsf/__free
  end
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      local.set $1
      local.get $1
      i32.const 0
      i32.eq
      br_if $case0|0
      local.get $1
      i32.const 1
      i32.eq
      br_if $case1|0
      local.get $1
      i32.const 2
      i32.eq
      br_if $case2|0
      br $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     i32.const 0
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     i32.const 1
     i32.mul
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $2
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $0
    loop $while-continue|1
     local.get $0
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     if
      local.get $0
      global.set $~lib/rt/itcms/iter
      local.get $0
      call $~lib/rt/itcms/Object#get:color
      local.get $2
      i32.ne
      if
       local.get $0
       local.get $2
       call $~lib/rt/itcms/Object#set:color
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $0
       i32.const 20
       i32.add
       i32.const 0
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       i32.const 1
       i32.mul
       return
      end
      local.get $0
      call $~lib/rt/itcms/Object#get:next
      local.set $0
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    i32.const 0
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $0
    local.get $0
    global.get $~lib/rt/itcms/toSpace
    i32.eq
    if
     i32.const 0
     call $~lib/rt/itcms/visitStack
     global.get $~lib/rt/itcms/iter
     call $~lib/rt/itcms/Object#get:next
     local.set $0
     loop $while-continue|2
      local.get $0
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      if
       local.get $0
       call $~lib/rt/itcms/Object#get:color
       local.get $2
       i32.ne
       if
        local.get $0
        local.get $2
        call $~lib/rt/itcms/Object#set:color
        local.get $0
        i32.const 20
        i32.add
        i32.const 0
        call $~lib/rt/__visit_members
       end
       local.get $0
       call $~lib/rt/itcms/Object#get:next
       local.set $0
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $3
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $3
     global.set $~lib/rt/itcms/toSpace
     local.get $2
     global.set $~lib/rt/itcms/white
     local.get $3
     call $~lib/rt/itcms/Object#get:next
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    i32.const 1
    i32.mul
    return
   end
   global.get $~lib/rt/itcms/iter
   local.set $0
   local.get $0
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $0
    call $~lib/rt/itcms/Object#get:next
    global.set $~lib/rt/itcms/iter
    i32.const 1
    drop
    local.get $0
    call $~lib/rt/itcms/Object#get:color
    global.get $~lib/rt/itcms/white
    i32.eqz
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 368
     i32.const 229
     i32.const 20
     call $~lib/wasi_internal/wasi_abort
     unreachable
    end
    local.get $0
    call $~lib/rt/itcms/free
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:nextWithColor
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:prev
   i32.const 0
   global.set $~lib/rt/itcms/state
   br $break|0
  end
  i32.const 0
  return
 )
 (func $~lib/rt/itcms/interrupt
  (local $0 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1024
  i32.const 200
  i32.mul
  i32.const 100
  i32.div_u
  local.set $0
  loop $do-loop|0
   local.get $0
   call $~lib/rt/itcms/step
   i32.sub
   local.set $0
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.eq
   if
    i32.const 0
    drop
    global.get $~lib/rt/itcms/total
    i64.extend_i32_u
    i32.const 200
    i64.extend_i32_u
    i64.mul
    i64.const 100
    i64.div_u
    i32.wrap_i64
    i32.const 1024
    i32.add
    global.set $~lib/rt/itcms/threshold
    i32.const 0
    drop
    return
   end
   local.get $0
   i32.const 0
   i32.gt_s
   br_if $do-loop|0
  end
  i32.const 0
  drop
  global.get $~lib/rt/itcms/total
  i32.const 1024
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.sub
  i32.const 1024
  i32.lt_u
  i32.mul
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
 )
 (func $~lib/rt/tlsf/computeSize (param $0 i32) (result i32)
  local.get $0
  i32.const 12
  i32.le_u
  if (result i32)
   i32.const 12
  else
   local.get $0
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
  end
  return
 )
 (func $~lib/rt/tlsf/prepareSize (param $0 i32) (result i32)
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 304
   i32.const 640
   i32.const 458
   i32.const 29
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $0
  call $~lib/rt/tlsf/computeSize
  return
 )
 (func $~lib/rt/tlsf/searchBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $2
   local.get $1
   i32.const 4
   i32.shr_u
   local.set $3
  else
   local.get $1
   i32.const 536870910
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 1
    i32.const 27
    local.get $1
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
   else
    local.get $1
   end
   local.set $4
   i32.const 31
   local.get $4
   i32.clz
   i32.sub
   local.set $2
   local.get $4
   local.get $2
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $3
   local.get $2
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $2
  end
  i32.const 1
  drop
  local.get $2
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $3
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 640
   i32.const 330
   i32.const 14
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  block $~lib/rt/tlsf/GETSL|inlined.2 (result i32)
   local.get $0
   local.set $5
   local.get $2
   local.set $6
   local.get $5
   local.get $6
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=4
   br $~lib/rt/tlsf/GETSL|inlined.2
  end
  i32.const 0
  i32.const -1
  i32.xor
  local.get $3
  i32.shl
  i32.and
  local.set $7
  i32.const 0
  local.set $8
  local.get $7
  i32.eqz
  if
   local.get $0
   call $~lib/rt/tlsf/Root#get:flMap
   i32.const 0
   i32.const -1
   i32.xor
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.set $9
   local.get $9
   i32.eqz
   if
    i32.const 0
    local.set $8
   else
    local.get $9
    i32.ctz
    local.set $2
    block $~lib/rt/tlsf/GETSL|inlined.3 (result i32)
     local.get $0
     local.set $10
     local.get $2
     local.set $11
     local.get $10
     local.get $11
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     br $~lib/rt/tlsf/GETSL|inlined.3
    end
    local.set $7
    i32.const 1
    drop
    local.get $7
    i32.eqz
    if
     i32.const 0
     i32.const 640
     i32.const 343
     i32.const 18
     call $~lib/wasi_internal/wasi_abort
     unreachable
    end
    block $~lib/rt/tlsf/GETHEAD|inlined.2 (result i32)
     local.get $0
     local.set $12
     local.get $2
     local.set $13
     local.get $7
     i32.ctz
     local.set $14
     local.get $12
     local.get $13
     i32.const 4
     i32.shl
     local.get $14
     i32.add
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=96
     br $~lib/rt/tlsf/GETHEAD|inlined.2
    end
    local.set $8
   end
  else
   block $~lib/rt/tlsf/GETHEAD|inlined.3 (result i32)
    local.get $0
    local.set $15
    local.get $2
    local.set $16
    local.get $7
    i32.ctz
    local.set $17
    local.get $15
    local.get $16
    i32.const 4
    i32.shl
    local.get $17
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=96
    br $~lib/rt/tlsf/GETHEAD|inlined.3
   end
   local.set $8
  end
  local.get $8
  return
 )
 (func $~lib/rt/tlsf/growMemory (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  i32.const 0
  drop
  local.get $1
  i32.const 536870910
  i32.lt_u
  if
   local.get $1
   i32.const 1
   i32.const 27
   local.get $1
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.set $1
  end
  memory.size $0
  local.set $2
  local.get $1
  i32.const 4
  local.get $2
  i32.const 16
  i32.shl
  i32.const 4
  i32.sub
  block $~lib/rt/tlsf/GETTAIL|inlined.1 (result i32)
   local.get $0
   local.set $3
   local.get $3
   i32.load $0 offset=1568
   br $~lib/rt/tlsf/GETTAIL|inlined.1
  end
  i32.ne
  i32.shl
  i32.add
  local.set $1
  local.get $1
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $4
  local.get $2
  local.tee $5
  local.get $4
  local.tee $6
  local.get $5
  local.get $6
  i32.gt_s
  select
  local.set $7
  local.get $7
  memory.grow $0
  i32.const 0
  i32.lt_s
  if
   local.get $4
   memory.grow $0
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
  end
  memory.size $0
  local.set $8
  local.get $0
  local.get $2
  i32.const 16
  i32.shl
  local.get $8
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
 )
 (func $~lib/rt/tlsf/prepareBlock (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $3
  i32.const 1
  drop
  local.get $2
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 640
   i32.const 357
   i32.const 14
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $3
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $2
  i32.sub
  local.set $4
  local.get $4
  i32.const 4
  i32.const 12
  i32.add
  i32.ge_u
  if
   local.get $1
   local.get $2
   local.get $3
   i32.const 2
   i32.and
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $1
   i32.const 4
   i32.add
   local.get $2
   i32.add
   local.set $5
   local.get $5
   local.get $4
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $0
   local.get $5
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $1
   local.get $3
   i32.const 1
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
   block $~lib/rt/tlsf/GETRIGHT|inlined.3 (result i32)
    local.get $1
    local.set $7
    local.get $7
    i32.const 4
    i32.add
    local.get $7
    call $~lib/rt/common/BLOCK#get:mmInfo
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    br $~lib/rt/tlsf/GETRIGHT|inlined.3
   end
   block $~lib/rt/tlsf/GETRIGHT|inlined.2 (result i32)
    local.get $1
    local.set $6
    local.get $6
    i32.const 4
    i32.add
    local.get $6
    call $~lib/rt/common/BLOCK#get:mmInfo
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    br $~lib/rt/tlsf/GETRIGHT|inlined.2
   end
   call $~lib/rt/common/BLOCK#get:mmInfo
   i32.const 2
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/tlsf/prepareSize
  local.set $2
  local.get $0
  local.get $2
  call $~lib/rt/tlsf/searchBlock
  local.set $3
  local.get $3
  i32.eqz
  if
   local.get $0
   local.get $2
   call $~lib/rt/tlsf/growMemory
   local.get $0
   local.get $2
   call $~lib/rt/tlsf/searchBlock
   local.set $3
   i32.const 1
   drop
   local.get $3
   i32.eqz
   if
    i32.const 0
    i32.const 640
    i32.const 496
    i32.const 16
    call $~lib/wasi_internal/wasi_abort
    unreachable
   end
  end
  i32.const 1
  drop
  local.get $3
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $2
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 640
   i32.const 498
   i32.const 14
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $0
  local.get $3
  call $~lib/rt/tlsf/removeBlock
  local.get $0
  local.get $3
  local.get $2
  call $~lib/rt/tlsf/prepareBlock
  i32.const 0
  drop
  local.get $3
  return
 )
 (func $~lib/rt/tlsf/__alloc (param $0 i32) (result i32)
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $0
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
  return
 )
 (func $~lib/rt/itcms/Object#set:rtId (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/rt/itcms/Object#set:rtSize (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=16
 )
 (func $~lib/rt/itcms/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 304
   i32.const 368
   i32.const 261
   i32.const 31
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   call $~lib/rt/itcms/interrupt
  end
  i32.const 16
  local.get $0
  i32.add
  call $~lib/rt/tlsf/__alloc
  i32.const 4
  i32.sub
  local.set $2
  local.get $2
  local.get $1
  call $~lib/rt/itcms/Object#set:rtId
  local.get $2
  local.get $0
  call $~lib/rt/itcms/Object#set:rtSize
  local.get $2
  global.get $~lib/rt/itcms/fromSpace
  global.get $~lib/rt/itcms/white
  call $~lib/rt/itcms/Object#linkTo
  global.get $~lib/rt/itcms/total
  local.get $2
  call $~lib/rt/itcms/Object#get:size
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $2
  i32.const 20
  i32.add
  local.set $3
  local.get $3
  i32.const 0
  local.get $0
  memory.fill $0
  local.get $3
  return
 )
 (func $~lib/rt/__newBuffer (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $0
  local.get $1
  call $~lib/rt/itcms/__new
  local.set $3
  local.get $2
  if
   local.get $3
   local.get $2
   local.get $0
   memory.copy $0 $0
  end
  local.get $3
  return
 )
 (func $~lib/rt/itcms/__link (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.eqz
  if
   return
  end
  i32.const 1
  drop
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 368
   i32.const 295
   i32.const 14
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $1
  i32.const 20
  i32.sub
  local.set $3
  local.get $3
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $0
   i32.const 20
   i32.sub
   local.set $4
   local.get $4
   call $~lib/rt/itcms/Object#get:color
   local.set $5
   local.get $5
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $2
    if
     local.get $4
     call $~lib/rt/itcms/Object#makeGray
    else
     local.get $3
     call $~lib/rt/itcms/Object#makeGray
    end
   else
    local.get $5
    i32.const 3
    i32.eq
    if (result i32)
     global.get $~lib/rt/itcms/state
     i32.const 1
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $3
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
 (func $~lib/array/Array<i32>#get:length_ (param $0 i32) (result i32)
  local.get $0
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<i32>#get:dataStart (param $0 i32) (result i32)
  local.get $0
  i32.load $0 offset=4
 )
 (func $~lib/util/number/utoa32_dec_lut (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  loop $while-continue|0
   local.get $1
   i32.const 10000
   i32.ge_u
   if
    local.get $1
    i32.const 10000
    i32.div_u
    local.set $3
    local.get $1
    i32.const 10000
    i32.rem_u
    local.set $4
    local.get $3
    local.set $1
    local.get $4
    i32.const 100
    i32.div_u
    local.set $5
    local.get $4
    i32.const 100
    i32.rem_u
    local.set $6
    i32.const 1068
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $7
    i32.const 1068
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $8
    local.get $2
    i32.const 4
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $7
    local.get $8
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    br $while-continue|0
   end
  end
  local.get $1
  i32.const 100
  i32.ge_u
  if
   local.get $1
   i32.const 100
   i32.div_u
   local.set $9
   local.get $1
   i32.const 100
   i32.rem_u
   local.set $10
   local.get $9
   local.set $1
   local.get $2
   i32.const 2
   i32.sub
   local.set $2
   i32.const 1068
   local.get $10
   i32.const 2
   i32.shl
   i32.add
   i32.load $0
   local.set $11
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $11
   i32.store $0
  end
  local.get $1
  i32.const 10
  i32.ge_u
  if
   local.get $2
   i32.const 2
   i32.sub
   local.set $2
   i32.const 1068
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   i32.load $0
   local.set $12
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $12
   i32.store $0
  else
   local.get $2
   i32.const 1
   i32.sub
   local.set $2
   i32.const 48
   local.get $1
   i32.add
   local.set $13
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $13
   i32.store16 $0
  end
 )
 (func $~lib/util/number/utoa_hex_lut (param $0 i32) (param $1 i64) (param $2 i32)
  loop $while-continue|0
   local.get $2
   i32.const 2
   i32.ge_u
   if
    local.get $2
    i32.const 2
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    i32.const 1488
    local.get $1
    i32.wrap_i64
    i32.const 255
    i32.and
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $1
    i64.const 8
    i64.shr_u
    local.set $1
    br $while-continue|0
   end
  end
  local.get $2
  i32.const 1
  i32.and
  if
   local.get $0
   i32.const 1488
   local.get $1
   i32.wrap_i64
   i32.const 6
   i32.shl
   i32.add
   i32.load16_u $0
   i32.store16 $0
  end
 )
 (func $~lib/util/number/ulog_base (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i64)
  (local $5 i32)
  block $~lib/util/number/isPowerOf2<i32>|inlined.0 (result i32)
   local.get $1
   local.set $2
   local.get $2
   i32.popcnt
   i32.const 1
   i32.eq
   br $~lib/util/number/isPowerOf2<i32>|inlined.0
  end
  if
   i32.const 63
   local.get $0
   i64.clz
   i32.wrap_i64
   i32.sub
   i32.const 31
   local.get $1
   i32.clz
   i32.sub
   i32.div_u
   i32.const 1
   i32.add
   return
  end
  local.get $1
  i64.extend_i32_s
  local.set $3
  local.get $3
  local.set $4
  i32.const 1
  local.set $5
  loop $while-continue|0
   local.get $0
   local.get $4
   i64.ge_u
   if
    local.get $0
    local.get $4
    i64.div_u
    local.set $0
    local.get $4
    local.get $4
    i64.mul
    local.set $4
    local.get $5
    i32.const 1
    i32.shl
    local.set $5
    br $while-continue|0
   end
  end
  loop $while-continue|1
   local.get $0
   i64.const 1
   i64.ge_u
   if
    local.get $0
    local.get $3
    i64.div_u
    local.set $0
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $while-continue|1
   end
  end
  local.get $5
  i32.const 1
  i32.sub
  return
 )
 (func $~lib/util/number/utoa64_any_core (param $0 i32) (param $1 i64) (param $2 i32) (param $3 i32)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i64)
  local.get $3
  i64.extend_i32_s
  local.set $4
  local.get $3
  local.get $3
  i32.const 1
  i32.sub
  i32.and
  i32.const 0
  i32.eq
  if
   local.get $3
   i32.ctz
   i32.const 7
   i32.and
   i64.extend_i32_s
   local.set $5
   local.get $4
   i64.const 1
   i64.sub
   local.set $6
   loop $do-loop|0
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    i32.const 2544
    local.get $1
    local.get $6
    i64.and
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    i32.store16 $0
    local.get $1
    local.get $5
    i64.shr_u
    local.set $1
    local.get $1
    i64.const 0
    i64.ne
    br_if $do-loop|0
   end
  else
   loop $do-loop|1
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    local.get $1
    local.get $4
    i64.div_u
    local.set $7
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    i32.const 2544
    local.get $1
    local.get $7
    local.get $4
    i64.mul
    i64.sub
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    i32.store16 $0
    local.get $7
    local.set $1
    local.get $1
    i64.const 0
    i64.ne
    br_if $do-loop|1
   end
  end
 )
 (func $~lib/number/I32#toString (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/util/number/itoa32
  return
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store $0
  i32.const 1
  drop
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 2
  i32.shr_u
  return
 )
 (func $~lib/bindings/wasi_snapshot_preview1/errnoToString (param $0 i32) (result i32)
  (local $1 i32)
  block $break|0
   block $case76|0
    block $case75|0
     block $case74|0
      block $case73|0
       block $case72|0
        block $case71|0
         block $case70|0
          block $case69|0
           block $case68|0
            block $case67|0
             block $case66|0
              block $case65|0
               block $case64|0
                block $case63|0
                 block $case62|0
                  block $case61|0
                   block $case60|0
                    block $case59|0
                     block $case58|0
                      block $case57|0
                       block $case56|0
                        block $case55|0
                         block $case54|0
                          block $case53|0
                           block $case52|0
                            block $case51|0
                             block $case50|0
                              block $case49|0
                               block $case48|0
                                block $case47|0
                                 block $case46|0
                                  block $case45|0
                                   block $case44|0
                                    block $case43|0
                                     block $case42|0
                                      block $case41|0
                                       block $case40|0
                                        block $case39|0
                                         block $case38|0
                                          block $case37|0
                                           block $case36|0
                                            block $case35|0
                                             block $case34|0
                                              block $case33|0
                                               block $case32|0
                                                block $case31|0
                                                 block $case30|0
                                                  block $case29|0
                                                   block $case28|0
                                                    block $case27|0
                                                     block $case26|0
                                                      block $case25|0
                                                       block $case24|0
                                                        block $case23|0
                                                         block $case22|0
                                                          block $case21|0
                                                           block $case20|0
                                                            block $case19|0
                                                             block $case18|0
                                                              block $case17|0
                                                               block $case16|0
                                                                block $case15|0
                                                                 block $case14|0
                                                                  block $case13|0
                                                                   block $case12|0
                                                                    block $case11|0
                                                                     block $case10|0
                                                                      block $case9|0
                                                                       block $case8|0
                                                                        block $case7|0
                                                                         block $case6|0
                                                                          block $case5|0
                                                                           block $case4|0
                                                                            block $case3|0
                                                                             block $case2|0
                                                                              block $case1|0
                                                                               block $case0|0
                                                                                local.get $0
                                                                                i32.const 65535
                                                                                i32.and
                                                                                local.set $1
                                                                                local.get $1
                                                                                i32.const 0
                                                                                i32.eq
                                                                                br_if $case0|0
                                                                                local.get $1
                                                                                i32.const 1
                                                                                i32.eq
                                                                                br_if $case1|0
                                                                                local.get $1
                                                                                i32.const 2
                                                                                i32.eq
                                                                                br_if $case2|0
                                                                                local.get $1
                                                                                i32.const 3
                                                                                i32.eq
                                                                                br_if $case3|0
                                                                                local.get $1
                                                                                i32.const 4
                                                                                i32.eq
                                                                                br_if $case4|0
                                                                                local.get $1
                                                                                i32.const 5
                                                                                i32.eq
                                                                                br_if $case5|0
                                                                                local.get $1
                                                                                i32.const 6
                                                                                i32.eq
                                                                                br_if $case6|0
                                                                                local.get $1
                                                                                i32.const 7
                                                                                i32.eq
                                                                                br_if $case7|0
                                                                                local.get $1
                                                                                i32.const 8
                                                                                i32.eq
                                                                                br_if $case8|0
                                                                                local.get $1
                                                                                i32.const 9
                                                                                i32.eq
                                                                                br_if $case9|0
                                                                                local.get $1
                                                                                i32.const 10
                                                                                i32.eq
                                                                                br_if $case10|0
                                                                                local.get $1
                                                                                i32.const 11
                                                                                i32.eq
                                                                                br_if $case11|0
                                                                                local.get $1
                                                                                i32.const 12
                                                                                i32.eq
                                                                                br_if $case12|0
                                                                                local.get $1
                                                                                i32.const 13
                                                                                i32.eq
                                                                                br_if $case13|0
                                                                                local.get $1
                                                                                i32.const 14
                                                                                i32.eq
                                                                                br_if $case14|0
                                                                                local.get $1
                                                                                i32.const 15
                                                                                i32.eq
                                                                                br_if $case15|0
                                                                                local.get $1
                                                                                i32.const 16
                                                                                i32.eq
                                                                                br_if $case16|0
                                                                                local.get $1
                                                                                i32.const 17
                                                                                i32.eq
                                                                                br_if $case17|0
                                                                                local.get $1
                                                                                i32.const 18
                                                                                i32.eq
                                                                                br_if $case18|0
                                                                                local.get $1
                                                                                i32.const 19
                                                                                i32.eq
                                                                                br_if $case19|0
                                                                                local.get $1
                                                                                i32.const 20
                                                                                i32.eq
                                                                                br_if $case20|0
                                                                                local.get $1
                                                                                i32.const 21
                                                                                i32.eq
                                                                                br_if $case21|0
                                                                                local.get $1
                                                                                i32.const 22
                                                                                i32.eq
                                                                                br_if $case22|0
                                                                                local.get $1
                                                                                i32.const 23
                                                                                i32.eq
                                                                                br_if $case23|0
                                                                                local.get $1
                                                                                i32.const 24
                                                                                i32.eq
                                                                                br_if $case24|0
                                                                                local.get $1
                                                                                i32.const 25
                                                                                i32.eq
                                                                                br_if $case25|0
                                                                                local.get $1
                                                                                i32.const 26
                                                                                i32.eq
                                                                                br_if $case26|0
                                                                                local.get $1
                                                                                i32.const 27
                                                                                i32.eq
                                                                                br_if $case27|0
                                                                                local.get $1
                                                                                i32.const 28
                                                                                i32.eq
                                                                                br_if $case28|0
                                                                                local.get $1
                                                                                i32.const 29
                                                                                i32.eq
                                                                                br_if $case29|0
                                                                                local.get $1
                                                                                i32.const 30
                                                                                i32.eq
                                                                                br_if $case30|0
                                                                                local.get $1
                                                                                i32.const 31
                                                                                i32.eq
                                                                                br_if $case31|0
                                                                                local.get $1
                                                                                i32.const 32
                                                                                i32.eq
                                                                                br_if $case32|0
                                                                                local.get $1
                                                                                i32.const 33
                                                                                i32.eq
                                                                                br_if $case33|0
                                                                                local.get $1
                                                                                i32.const 34
                                                                                i32.eq
                                                                                br_if $case34|0
                                                                                local.get $1
                                                                                i32.const 35
                                                                                i32.eq
                                                                                br_if $case35|0
                                                                                local.get $1
                                                                                i32.const 36
                                                                                i32.eq
                                                                                br_if $case36|0
                                                                                local.get $1
                                                                                i32.const 37
                                                                                i32.eq
                                                                                br_if $case37|0
                                                                                local.get $1
                                                                                i32.const 38
                                                                                i32.eq
                                                                                br_if $case38|0
                                                                                local.get $1
                                                                                i32.const 39
                                                                                i32.eq
                                                                                br_if $case39|0
                                                                                local.get $1
                                                                                i32.const 40
                                                                                i32.eq
                                                                                br_if $case40|0
                                                                                local.get $1
                                                                                i32.const 41
                                                                                i32.eq
                                                                                br_if $case41|0
                                                                                local.get $1
                                                                                i32.const 42
                                                                                i32.eq
                                                                                br_if $case42|0
                                                                                local.get $1
                                                                                i32.const 43
                                                                                i32.eq
                                                                                br_if $case43|0
                                                                                local.get $1
                                                                                i32.const 44
                                                                                i32.eq
                                                                                br_if $case44|0
                                                                                local.get $1
                                                                                i32.const 45
                                                                                i32.eq
                                                                                br_if $case45|0
                                                                                local.get $1
                                                                                i32.const 46
                                                                                i32.eq
                                                                                br_if $case46|0
                                                                                local.get $1
                                                                                i32.const 47
                                                                                i32.eq
                                                                                br_if $case47|0
                                                                                local.get $1
                                                                                i32.const 48
                                                                                i32.eq
                                                                                br_if $case48|0
                                                                                local.get $1
                                                                                i32.const 49
                                                                                i32.eq
                                                                                br_if $case49|0
                                                                                local.get $1
                                                                                i32.const 50
                                                                                i32.eq
                                                                                br_if $case50|0
                                                                                local.get $1
                                                                                i32.const 51
                                                                                i32.eq
                                                                                br_if $case51|0
                                                                                local.get $1
                                                                                i32.const 52
                                                                                i32.eq
                                                                                br_if $case52|0
                                                                                local.get $1
                                                                                i32.const 53
                                                                                i32.eq
                                                                                br_if $case53|0
                                                                                local.get $1
                                                                                i32.const 54
                                                                                i32.eq
                                                                                br_if $case54|0
                                                                                local.get $1
                                                                                i32.const 55
                                                                                i32.eq
                                                                                br_if $case55|0
                                                                                local.get $1
                                                                                i32.const 56
                                                                                i32.eq
                                                                                br_if $case56|0
                                                                                local.get $1
                                                                                i32.const 57
                                                                                i32.eq
                                                                                br_if $case57|0
                                                                                local.get $1
                                                                                i32.const 58
                                                                                i32.eq
                                                                                br_if $case58|0
                                                                                local.get $1
                                                                                i32.const 59
                                                                                i32.eq
                                                                                br_if $case59|0
                                                                                local.get $1
                                                                                i32.const 60
                                                                                i32.eq
                                                                                br_if $case60|0
                                                                                local.get $1
                                                                                i32.const 61
                                                                                i32.eq
                                                                                br_if $case61|0
                                                                                local.get $1
                                                                                i32.const 62
                                                                                i32.eq
                                                                                br_if $case62|0
                                                                                local.get $1
                                                                                i32.const 63
                                                                                i32.eq
                                                                                br_if $case63|0
                                                                                local.get $1
                                                                                i32.const 64
                                                                                i32.eq
                                                                                br_if $case64|0
                                                                                local.get $1
                                                                                i32.const 65
                                                                                i32.eq
                                                                                br_if $case65|0
                                                                                local.get $1
                                                                                i32.const 66
                                                                                i32.eq
                                                                                br_if $case66|0
                                                                                local.get $1
                                                                                i32.const 67
                                                                                i32.eq
                                                                                br_if $case67|0
                                                                                local.get $1
                                                                                i32.const 68
                                                                                i32.eq
                                                                                br_if $case68|0
                                                                                local.get $1
                                                                                i32.const 69
                                                                                i32.eq
                                                                                br_if $case69|0
                                                                                local.get $1
                                                                                i32.const 70
                                                                                i32.eq
                                                                                br_if $case70|0
                                                                                local.get $1
                                                                                i32.const 71
                                                                                i32.eq
                                                                                br_if $case71|0
                                                                                local.get $1
                                                                                i32.const 72
                                                                                i32.eq
                                                                                br_if $case72|0
                                                                                local.get $1
                                                                                i32.const 73
                                                                                i32.eq
                                                                                br_if $case73|0
                                                                                local.get $1
                                                                                i32.const 74
                                                                                i32.eq
                                                                                br_if $case74|0
                                                                                local.get $1
                                                                                i32.const 75
                                                                                i32.eq
                                                                                br_if $case75|0
                                                                                local.get $1
                                                                                i32.const 76
                                                                                i32.eq
                                                                                br_if $case76|0
                                                                                br $break|0
                                                                               end
                                                                               i32.const 2784
                                                                               return
                                                                              end
                                                                              i32.const 2832
                                                                              return
                                                                             end
                                                                             i32.const 2864
                                                                             return
                                                                            end
                                                                            i32.const 2896
                                                                            return
                                                                           end
                                                                           i32.const 2944
                                                                           return
                                                                          end
                                                                          i32.const 2992
                                                                          return
                                                                         end
                                                                         i32.const 3040
                                                                         return
                                                                        end
                                                                        i32.const 3072
                                                                        return
                                                                       end
                                                                       i32.const 3120
                                                                       return
                                                                      end
                                                                      i32.const 3152
                                                                      return
                                                                     end
                                                                     i32.const 3184
                                                                     return
                                                                    end
                                                                    i32.const 3216
                                                                    return
                                                                   end
                                                                   i32.const 3264
                                                                   return
                                                                  end
                                                                  i32.const 3296
                                                                  return
                                                                 end
                                                                 i32.const 3344
                                                                 return
                                                                end
                                                                i32.const 3392
                                                                return
                                                               end
                                                               i32.const 3440
                                                               return
                                                              end
                                                              i32.const 3472
                                                              return
                                                             end
                                                             i32.const 3520
                                                             return
                                                            end
                                                            i32.const 3552
                                                            return
                                                           end
                                                           i32.const 3584
                                                           return
                                                          end
                                                          i32.const 3616
                                                          return
                                                         end
                                                         i32.const 3648
                                                         return
                                                        end
                                                        i32.const 3680
                                                        return
                                                       end
                                                       i32.const 3728
                                                       return
                                                      end
                                                      i32.const 3760
                                                      return
                                                     end
                                                     i32.const 3792
                                                     return
                                                    end
                                                    i32.const 3840
                                                    return
                                                   end
                                                   i32.const 3872
                                                   return
                                                  end
                                                  i32.const 3904
                                                  return
                                                 end
                                                 i32.const 3936
                                                 return
                                                end
                                                i32.const 3968
                                                return
                                               end
                                               i32.const 4000
                                               return
                                              end
                                              i32.const 4032
                                              return
                                             end
                                             i32.const 4064
                                             return
                                            end
                                            i32.const 4096
                                            return
                                           end
                                           i32.const 4144
                                           return
                                          end
                                          i32.const 4192
                                          return
                                         end
                                         i32.const 4240
                                         return
                                        end
                                        i32.const 4288
                                        return
                                       end
                                       i32.const 4336
                                       return
                                      end
                                      i32.const 4384
                                      return
                                     end
                                     i32.const 4416
                                     return
                                    end
                                    i32.const 4448
                                    return
                                   end
                                   i32.const 4480
                                   return
                                  end
                                  i32.const 4512
                                  return
                                 end
                                 i32.const 4544
                                 return
                                end
                                i32.const 4576
                                return
                               end
                               i32.const 4608
                               return
                              end
                              i32.const 4640
                              return
                             end
                             i32.const 4672
                             return
                            end
                            i32.const 4720
                            return
                           end
                           i32.const 4752
                           return
                          end
                          i32.const 4784
                          return
                         end
                         i32.const 4832
                         return
                        end
                        i32.const 4864
                        return
                       end
                       i32.const 4912
                       return
                      end
                      i32.const 4960
                      return
                     end
                     i32.const 5008
                     return
                    end
                    i32.const 5040
                    return
                   end
                   i32.const 5072
                   return
                  end
                  i32.const 5104
                  return
                 end
                 i32.const 5152
                 return
                end
                i32.const 5200
                return
               end
               i32.const 5232
               return
              end
              i32.const 5264
              return
             end
             i32.const 5296
             return
            end
            i32.const 5344
            return
           end
           i32.const 5392
           return
          end
          i32.const 5424
          return
         end
         i32.const 5456
         return
        end
        i32.const 5488
        return
       end
       i32.const 5520
       return
      end
      i32.const 5552
      return
     end
     i32.const 5600
     return
    end
    i32.const 5632
    return
   end
   i32.const 5664
   return
  end
  i32.const 5712
  return
 )
 (func $~lib/string/String.UTF8.byteLength (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  local.set $2
  local.get $2
  local.get $0
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.add
  local.set $3
  local.get $1
  i32.const 0
  i32.ne
  local.set $4
  block $while-break|0
   loop $while-continue|0
    local.get $2
    local.get $3
    i32.lt_u
    if
     local.get $2
     i32.load16_u $0
     local.set $5
     local.get $5
     i32.const 128
     i32.lt_u
     if
      local.get $1
      local.get $5
      i32.eqz
      i32.and
      if
       br $while-break|0
      end
      local.get $4
      i32.const 1
      i32.add
      local.set $4
     else
      local.get $5
      i32.const 2048
      i32.lt_u
      if
       local.get $4
       i32.const 2
       i32.add
       local.set $4
      else
       local.get $5
       i32.const 64512
       i32.and
       i32.const 55296
       i32.eq
       if (result i32)
        local.get $2
        i32.const 2
        i32.add
        local.get $3
        i32.lt_u
       else
        i32.const 0
       end
       if
        local.get $2
        i32.load16_u $0 offset=2
        i32.const 64512
        i32.and
        i32.const 56320
        i32.eq
        if
         local.get $4
         i32.const 4
         i32.add
         local.set $4
         local.get $2
         i32.const 4
         i32.add
         local.set $2
         br $while-continue|0
        end
       end
       local.get $4
       i32.const 3
       i32.add
       local.set $4
      end
     end
     local.get $2
     i32.const 2
     i32.add
     local.set $2
     br $while-continue|0
    end
   end
  end
  local.get $4
  return
 )
 (func $~lib/date/invalidDate (param $0 i64) (result i32)
  local.get $0
  i64.const 0
  i64.const 8640000000000000
  i64.sub
  i64.lt_s
  local.get $0
  i64.const 8640000000000000
  i64.gt_s
  i32.or
  return
 )
 (func $~lib/date/dateFromEpoch (param $0 i64) (result i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  block $~lib/date/floorDiv<i64>|inlined.0 (result i64)
   local.get $0
   local.set $1
   i32.const 86400000
   i64.extend_i32_s
   local.set $2
   local.get $1
   local.get $1
   i64.const 0
   i64.lt_s
   if (result i64)
    local.get $2
    i64.const 1
    i64.sub
   else
    i64.const 0
   end
   i64.sub
   local.get $2
   i64.div_s
   br $~lib/date/floorDiv<i64>|inlined.0
  end
  i32.wrap_i64
  i32.const 4
  i32.mul
  i32.const 719468
  i32.const 4
  i32.mul
  i32.add
  i32.const 3
  i32.or
  local.set $3
  block $~lib/date/floorDiv<i32>|inlined.0 (result i32)
   local.get $3
   local.set $4
   i32.const 146097
   local.set $5
   local.get $4
   local.get $4
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $5
    i32.const 1
    i32.sub
   else
    i32.const 0
   end
   i32.sub
   local.get $5
   i32.div_s
   br $~lib/date/floorDiv<i32>|inlined.0
  end
  local.set $6
  local.get $3
  local.get $6
  i32.const 146097
  i32.mul
  i32.sub
  local.set $7
  local.get $7
  i32.const 3
  i32.or
  i64.extend_i32_u
  i64.const 2939745
  i64.mul
  local.set $8
  local.get $8
  i32.wrap_i64
  i32.const 11758980
  i32.div_u
  local.set $9
  i32.const 2141
  local.get $9
  i32.mul
  i32.const 197913
  i32.add
  local.set $10
  i32.const 100
  local.get $6
  i32.mul
  local.get $8
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  i32.add
  local.set $11
  local.get $10
  i32.const 16
  i32.shr_u
  local.set $12
  local.get $10
  i32.const 65535
  i32.and
  i32.const 2141
  i32.div_s
  i32.const 1
  i32.add
  global.set $~lib/date/_day
  local.get $9
  i32.const 306
  i32.ge_u
  if
   local.get $12
   i32.const 12
   i32.sub
   local.set $12
   local.get $11
   i32.const 1
   i32.add
   local.set $11
  end
  local.get $12
  global.set $~lib/date/_month
  local.get $11
  return
 )
 (func $~lib/date/Date#set:year (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/date/Date#set:month (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/date/Date#set:day (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/date/Date#set:epochMillis (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store $0 offset=16
 )
 (func $~lib/wasi_date/wasi_Date.now (result i64)
  (local $0 i32)
  i32.const 0
  i64.const 1000000
  global.get $~lib/wasi_internal/tempbuf
  call $~lib/bindings/wasi_snapshot_preview1/clock_time_get
  local.set $0
  local.get $0
  i32.const 65535
  i32.and
  if
   local.get $0
   call $~lib/bindings/wasi_snapshot_preview1/errnoToString
   i32.const 6464
   i32.const 18
   i32.const 14
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  global.get $~lib/wasi_internal/tempbuf
  i64.load $0
  i64.const 1000000
  i64.div_u
  return
 )
 (func $~lib/date/Date#get:month (param $0 i32) (result i32)
  local.get $0
  i32.load $0 offset=4
 )
 (func $~lib/date/Date#get:day (param $0 i32) (result i32)
  local.get $0
  i32.load $0 offset=8
 )
 (func $~lib/date/Date#get:year (param $0 i32) (result i32)
  local.get $0
  i32.load $0
 )
 (func $~lib/date/dayOfWeek (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $0
  local.get $1
  i32.const 3
  i32.lt_s
  i32.sub
  local.set $0
  local.get $0
  block $~lib/date/floorDiv<i32>|inlined.1 (result i32)
   local.get $0
   local.set $3
   i32.const 4
   local.set $4
   local.get $3
   local.get $3
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $4
    i32.const 1
    i32.sub
   else
    i32.const 0
   end
   i32.sub
   local.get $4
   i32.div_s
   br $~lib/date/floorDiv<i32>|inlined.1
  end
  block $~lib/date/floorDiv<i32>|inlined.2 (result i32)
   local.get $0
   local.set $5
   i32.const 100
   local.set $6
   local.get $5
   local.get $5
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $6
    i32.const 1
    i32.sub
   else
    i32.const 0
   end
   i32.sub
   local.get $6
   i32.div_s
   br $~lib/date/floorDiv<i32>|inlined.2
  end
  i32.sub
  block $~lib/date/floorDiv<i32>|inlined.3 (result i32)
   local.get $0
   local.set $7
   i32.const 400
   local.set $8
   local.get $7
   local.get $7
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $8
    i32.const 1
    i32.sub
   else
    i32.const 0
   end
   i32.sub
   local.get $8
   i32.div_s
   br $~lib/date/floorDiv<i32>|inlined.3
  end
  i32.add
  i32.add
  local.set $0
  i32.const 7308
  local.get $1
  i32.add
  i32.const 1
  i32.sub
  i32.load8_u $0
  local.set $1
  block $~lib/date/euclidRem<i32>|inlined.0 (result i32)
   local.get $0
   local.get $1
   i32.add
   local.get $2
   i32.add
   local.set $9
   i32.const 7
   local.set $10
   local.get $9
   local.get $10
   i32.rem_s
   local.set $11
   local.get $11
   local.get $11
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $10
   else
    i32.const 0
   end
   i32.add
   br $~lib/date/euclidRem<i32>|inlined.0
  end
  return
 )
 (func $~lib/memory/memory.repeat (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 0
  local.set $4
  local.get $2
  local.get $3
  i32.mul
  local.set $5
  loop $while-continue|0
   local.get $4
   local.get $5
   i32.lt_u
   if
    local.get $0
    local.get $4
    i32.add
    local.get $1
    local.get $2
    memory.copy $0 $0
    local.get $4
    local.get $2
    i32.add
    local.set $4
    br $while-continue|0
   end
  end
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#__uget (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  return
 )
 (func $~lib/date/Date#get:epochMillis (param $0 i32) (result i64)
  local.get $0
  i64.load $0 offset=16
 )
 (func $~lib/arraybuffer/ArrayBuffer#get:byteLength (param $0 i32) (result i32)
  local.get $0
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  return
 )
 (func $~lib/rt/itcms/Object#get:rtSize (param $0 i32) (result i32)
  local.get $0
  i32.load $0 offset=16
 )
 (func $~lib/rt/itcms/__renew (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.const 20
  i32.sub
  local.set $2
  local.get $1
  local.get $2
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/Object#set:rtSize
   local.get $0
   return
  end
  local.get $1
  local.get $2
  call $~lib/rt/itcms/Object#get:rtId
  call $~lib/rt/itcms/__new
  local.set $3
  local.get $3
  local.get $0
  local.get $1
  local.tee $4
  local.get $2
  call $~lib/rt/itcms/Object#get:rtSize
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_u
  select
  memory.copy $0 $0
  local.get $3
  return
 )
 (func $~lib/wasi_internal/wasi_seed (result f64)
  (local $0 i64)
  loop $do-loop|0
   global.get $~lib/wasi_internal/tempbuf
   i32.const 8
   call $~lib/bindings/wasi_snapshot_preview1/random_get
   drop
   global.get $~lib/wasi_internal/tempbuf
   i64.load $0
   local.set $0
   local.get $0
   i64.const 0
   i64.ne
   i32.eqz
   br_if $do-loop|0
  end
  local.get $0
  f64.reinterpret_i64
  return
 )
 (func $~lib/math/murmurHash3 (param $0 i64) (result i64)
  local.get $0
  local.get $0
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $0
  local.get $0
  i64.const -49064778989728563
  i64.mul
  local.set $0
  local.get $0
  local.get $0
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $0
  local.get $0
  i64.const -4265267296055464877
  i64.mul
  local.set $0
  local.get $0
  local.get $0
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $0
  local.get $0
  return
 )
 (func $~lib/math/splitMix32 (param $0 i32) (result i32)
  local.get $0
  i32.const 1831565813
  i32.add
  local.set $0
  local.get $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  local.get $0
  i32.const 1
  i32.or
  i32.mul
  local.set $0
  local.get $0
  local.get $0
  local.get $0
  local.get $0
  i32.const 7
  i32.shr_u
  i32.xor
  local.get $0
  i32.const 61
  i32.or
  i32.mul
  i32.add
  i32.xor
  local.set $0
  local.get $0
  local.get $0
  i32.const 14
  i32.shr_u
  i32.xor
  return
 )
 (func $~lib/math/NativeMath.seedRandom (param $0 i64)
  local.get $0
  i64.const 0
  i64.eq
  if
   i64.const -7046029254386353131
   local.set $0
  end
  local.get $0
  call $~lib/math/murmurHash3
  global.set $~lib/math/random_state0_64
  global.get $~lib/math/random_state0_64
  i64.const -1
  i64.xor
  call $~lib/math/murmurHash3
  global.set $~lib/math/random_state1_64
  local.get $0
  i32.wrap_i64
  call $~lib/math/splitMix32
  global.set $~lib/math/random_state0_32
  global.get $~lib/math/random_state0_32
  call $~lib/math/splitMix32
  global.set $~lib/math/random_state1_32
  i32.const 1
  global.set $~lib/math/random_seeded
 )
 (func $~lib/math/NativeMath.random (result f64)
  (local $0 i64)
  (local $1 i64)
  (local $2 i64)
  global.get $~lib/math/random_seeded
  i32.eqz
  if
   call $~lib/wasi_internal/wasi_seed
   i64.reinterpret_f64
   call $~lib/math/NativeMath.seedRandom
  end
  global.get $~lib/math/random_state0_64
  local.set $0
  global.get $~lib/math/random_state1_64
  local.set $1
  local.get $1
  global.set $~lib/math/random_state0_64
  local.get $0
  local.get $0
  i64.const 23
  i64.shl
  i64.xor
  local.set $0
  local.get $0
  local.get $0
  i64.const 17
  i64.shr_u
  i64.xor
  local.set $0
  local.get $0
  local.get $1
  i64.xor
  local.set $0
  local.get $0
  local.get $1
  i64.const 26
  i64.shr_u
  i64.xor
  local.set $0
  local.get $0
  global.set $~lib/math/random_state1_64
  local.get $1
  i64.const 12
  i64.shr_u
  i64.const 4607182418800017408
  i64.or
  local.set $2
  local.get $2
  f64.reinterpret_i64
  f64.const 1
  f64.sub
  return
 )
 (func $~lib/util/number/genDigits (param $0 i32) (param $1 i64) (param $2 i32) (param $3 i64) (param $4 i32) (param $5 i64) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i64)
  (local $11 i32)
  (local $12 i64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i64)
  (local $19 i32)
  (local $20 i32)
  (local $21 i64)
  (local $22 i64)
  (local $23 i64)
  (local $24 i64)
  (local $25 i32)
  (local $26 i32)
  (local $27 i64)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i64)
  (local $32 i64)
  (local $33 i64)
  (local $34 i64)
  (local $35 i32)
  (local $36 i32)
  i32.const 0
  local.get $4
  i32.sub
  local.set $7
  i64.const 1
  local.get $7
  i64.extend_i32_s
  i64.shl
  local.set $8
  local.get $8
  i64.const 1
  i64.sub
  local.set $9
  local.get $3
  local.get $1
  i64.sub
  local.set $10
  local.get $3
  local.get $7
  i64.extend_i32_s
  i64.shr_u
  i32.wrap_i64
  local.set $11
  local.get $3
  local.get $9
  i64.and
  local.set $12
  local.get $11
  call $~lib/util/number/decimalCount32
  local.set $13
  local.get $6
  local.set $14
  loop $while-continue|0
   local.get $13
   i32.const 0
   i32.gt_s
   if
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $13
                local.set $16
                local.get $16
                i32.const 10
                i32.eq
                br_if $case0|1
                local.get $16
                i32.const 9
                i32.eq
                br_if $case1|1
                local.get $16
                i32.const 8
                i32.eq
                br_if $case2|1
                local.get $16
                i32.const 7
                i32.eq
                br_if $case3|1
                local.get $16
                i32.const 6
                i32.eq
                br_if $case4|1
                local.get $16
                i32.const 5
                i32.eq
                br_if $case5|1
                local.get $16
                i32.const 4
                i32.eq
                br_if $case6|1
                local.get $16
                i32.const 3
                i32.eq
                br_if $case7|1
                local.get $16
                i32.const 2
                i32.eq
                br_if $case8|1
                local.get $16
                i32.const 1
                i32.eq
                br_if $case9|1
                br $case10|1
               end
               local.get $11
               i32.const 1000000000
               i32.div_u
               local.set $15
               local.get $11
               i32.const 1000000000
               i32.rem_u
               local.set $11
               br $break|1
              end
              local.get $11
              i32.const 100000000
              i32.div_u
              local.set $15
              local.get $11
              i32.const 100000000
              i32.rem_u
              local.set $11
              br $break|1
             end
             local.get $11
             i32.const 10000000
             i32.div_u
             local.set $15
             local.get $11
             i32.const 10000000
             i32.rem_u
             local.set $11
             br $break|1
            end
            local.get $11
            i32.const 1000000
            i32.div_u
            local.set $15
            local.get $11
            i32.const 1000000
            i32.rem_u
            local.set $11
            br $break|1
           end
           local.get $11
           i32.const 100000
           i32.div_u
           local.set $15
           local.get $11
           i32.const 100000
           i32.rem_u
           local.set $11
           br $break|1
          end
          local.get $11
          i32.const 10000
          i32.div_u
          local.set $15
          local.get $11
          i32.const 10000
          i32.rem_u
          local.set $11
          br $break|1
         end
         local.get $11
         i32.const 1000
         i32.div_u
         local.set $15
         local.get $11
         i32.const 1000
         i32.rem_u
         local.set $11
         br $break|1
        end
        local.get $11
        i32.const 100
        i32.div_u
        local.set $15
        local.get $11
        i32.const 100
        i32.rem_u
        local.set $11
        br $break|1
       end
       local.get $11
       i32.const 10
       i32.div_u
       local.set $15
       local.get $11
       i32.const 10
       i32.rem_u
       local.set $11
       br $break|1
      end
      local.get $11
      local.set $15
      i32.const 0
      local.set $11
      br $break|1
     end
     i32.const 0
     local.set $15
     br $break|1
    end
    local.get $15
    local.get $14
    i32.or
    if
     local.get $0
     local.get $14
     local.tee $17
     i32.const 1
     i32.add
     local.set $14
     local.get $17
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $15
     i32.const 65535
     i32.and
     i32.add
     i32.store16 $0
    end
    local.get $13
    i32.const 1
    i32.sub
    local.set $13
    local.get $11
    i64.extend_i32_u
    local.get $7
    i64.extend_i32_s
    i64.shl
    local.get $12
    i64.add
    local.set $18
    local.get $18
    local.get $5
    i64.le_u
    if
     global.get $~lib/util/number/_K
     local.get $13
     i32.add
     global.set $~lib/util/number/_K
     local.get $0
     local.set $19
     local.get $14
     local.set $20
     local.get $5
     local.set $21
     local.get $18
     local.set $22
     i32.const 9456
     local.get $13
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u $0
     local.get $7
     i64.extend_i32_s
     i64.shl
     local.set $23
     local.get $10
     local.set $24
     local.get $19
     local.get $20
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $25
     local.get $25
     i32.load16_u $0
     local.set $26
     loop $while-continue|3
      local.get $22
      local.get $24
      i64.lt_u
      if (result i32)
       local.get $21
       local.get $22
       i64.sub
       local.get $23
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $22
       local.get $23
       i64.add
       local.get $24
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $24
        local.get $22
        i64.sub
        local.get $22
        local.get $23
        i64.add
        local.get $24
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      if
       local.get $26
       i32.const 1
       i32.sub
       local.set $26
       local.get $22
       local.get $23
       i64.add
       local.set $22
       br $while-continue|3
      end
     end
     local.get $25
     local.get $26
     i32.store16 $0
     local.get $14
     return
    end
    br $while-continue|0
   end
  end
  loop $while-continue|4
   i32.const 1
   if
    local.get $12
    i64.const 10
    i64.mul
    local.set $12
    local.get $5
    i64.const 10
    i64.mul
    local.set $5
    local.get $12
    local.get $7
    i64.extend_i32_s
    i64.shr_u
    local.set $27
    local.get $27
    local.get $14
    i64.extend_i32_s
    i64.or
    i64.const 0
    i64.ne
    if
     local.get $0
     local.get $14
     local.tee $28
     i32.const 1
     i32.add
     local.set $14
     local.get $28
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $27
     i32.wrap_i64
     i32.const 65535
     i32.and
     i32.add
     i32.store16 $0
    end
    local.get $12
    local.get $9
    i64.and
    local.set $12
    local.get $13
    i32.const 1
    i32.sub
    local.set $13
    local.get $12
    local.get $5
    i64.lt_u
    if
     global.get $~lib/util/number/_K
     local.get $13
     i32.add
     global.set $~lib/util/number/_K
     local.get $10
     i32.const 9456
     i32.const 0
     local.get $13
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u $0
     i64.mul
     local.set $10
     local.get $0
     local.set $29
     local.get $14
     local.set $30
     local.get $5
     local.set $31
     local.get $12
     local.set $32
     local.get $8
     local.set $33
     local.get $10
     local.set $34
     local.get $29
     local.get $30
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $35
     local.get $35
     i32.load16_u $0
     local.set $36
     loop $while-continue|6
      local.get $32
      local.get $34
      i64.lt_u
      if (result i32)
       local.get $31
       local.get $32
       i64.sub
       local.get $33
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $32
       local.get $33
       i64.add
       local.get $34
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $34
        local.get $32
        i64.sub
        local.get $32
        local.get $33
        i64.add
        local.get $34
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      if
       local.get $36
       i32.const 1
       i32.sub
       local.set $36
       local.get $32
       local.get $33
       i64.add
       local.set $32
       br $while-continue|6
      end
     end
     local.get $35
     local.get $36
     i32.store16 $0
     local.get $14
     return
    end
    br $while-continue|4
   end
  end
  unreachable
 )
 (func $~lib/util/number/prettify (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  local.get $2
  i32.eqz
  if
   local.get $0
   local.get $1
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store $0
   local.get $1
   i32.const 2
   i32.add
   return
  end
  local.get $1
  local.get $2
  i32.add
  local.set $3
  local.get $1
  local.get $3
  i32.le_s
  if (result i32)
   local.get $3
   i32.const 21
   i32.le_s
  else
   i32.const 0
  end
  if
   local.get $1
   local.set $4
   loop $for-loop|0
    local.get $4
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $4
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     i32.store16 $0
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   local.get $0
   local.get $3
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store $0
   local.get $3
   i32.const 2
   i32.add
   return
  else
   local.get $3
   i32.const 0
   i32.gt_s
   if (result i32)
    local.get $3
    i32.const 21
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $0
    local.get $3
    i32.const 1
    i32.shl
    i32.add
    local.set $5
    local.get $5
    i32.const 2
    i32.add
    local.get $5
    i32.const 0
    local.get $2
    i32.sub
    i32.const 1
    i32.shl
    memory.copy $0 $0
    local.get $0
    local.get $3
    i32.const 1
    i32.shl
    i32.add
    i32.const 46
    i32.store16 $0
    local.get $1
    i32.const 1
    i32.add
    return
   else
    i32.const -6
    local.get $3
    i32.lt_s
    if (result i32)
     local.get $3
     i32.const 0
     i32.le_s
    else
     i32.const 0
    end
    if
     i32.const 2
     local.get $3
     i32.sub
     local.set $6
     local.get $0
     local.get $6
     i32.const 1
     i32.shl
     i32.add
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $0
     i32.const 48
     i32.const 46
     i32.const 16
     i32.shl
     i32.or
     i32.store $0
     i32.const 2
     local.set $7
     loop $for-loop|1
      local.get $7
      local.get $6
      i32.lt_s
      if
       local.get $0
       local.get $7
       i32.const 1
       i32.shl
       i32.add
       i32.const 48
       i32.store16 $0
       local.get $7
       i32.const 1
       i32.add
       local.set $7
       br $for-loop|1
      end
     end
     local.get $1
     local.get $6
     i32.add
     return
    else
     local.get $1
     i32.const 1
     i32.eq
     if
      local.get $0
      i32.const 101
      i32.store16 $0 offset=2
      block $~lib/util/number/genExponent|inlined.0 (result i32)
       local.get $0
       i32.const 4
       i32.add
       local.set $8
       local.get $3
       i32.const 1
       i32.sub
       local.set $9
       local.get $9
       i32.const 0
       i32.lt_s
       local.set $10
       local.get $10
       if
        i32.const 0
        local.get $9
        i32.sub
        local.set $9
       end
       local.get $9
       call $~lib/util/number/decimalCount32
       i32.const 1
       i32.add
       local.set $11
       local.get $8
       local.set $12
       local.get $9
       local.set $13
       local.get $11
       local.set $14
       i32.const 0
       i32.const 1
       i32.ge_s
       drop
       local.get $12
       local.get $13
       local.get $14
       call $~lib/util/number/utoa32_dec_lut
       local.get $8
       i32.const 45
       i32.const 43
       local.get $10
       select
       i32.store16 $0
       local.get $11
       br $~lib/util/number/genExponent|inlined.0
      end
      local.set $1
      local.get $1
      i32.const 2
      i32.add
      return
     else
      local.get $1
      i32.const 1
      i32.shl
      local.set $15
      local.get $0
      i32.const 4
      i32.add
      local.get $0
      i32.const 2
      i32.add
      local.get $15
      i32.const 2
      i32.sub
      memory.copy $0 $0
      local.get $0
      i32.const 46
      i32.store16 $0 offset=2
      local.get $0
      local.get $15
      i32.add
      i32.const 101
      i32.store16 $0 offset=2
      local.get $1
      block $~lib/util/number/genExponent|inlined.1 (result i32)
       local.get $0
       local.get $15
       i32.add
       i32.const 4
       i32.add
       local.set $16
       local.get $3
       i32.const 1
       i32.sub
       local.set $17
       local.get $17
       i32.const 0
       i32.lt_s
       local.set $18
       local.get $18
       if
        i32.const 0
        local.get $17
        i32.sub
        local.set $17
       end
       local.get $17
       call $~lib/util/number/decimalCount32
       i32.const 1
       i32.add
       local.set $19
       local.get $16
       local.set $20
       local.get $17
       local.set $21
       local.get $19
       local.set $22
       i32.const 0
       i32.const 1
       i32.ge_s
       drop
       local.get $20
       local.get $21
       local.get $22
       call $~lib/util/number/utoa32_dec_lut
       local.get $16
       i32.const 45
       i32.const 43
       local.get $18
       select
       i32.store16 $0
       local.get $19
       br $~lib/util/number/genExponent|inlined.1
      end
      i32.add
      local.set $1
      local.get $1
      i32.const 2
      i32.add
      return
     end
     unreachable
    end
    unreachable
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/dtoa_core (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i64)
  (local $11 i32)
  (local $12 i64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 f64)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i64)
  (local $22 i32)
  (local $23 i64)
  (local $24 i64)
  (local $25 i64)
  (local $26 i64)
  (local $27 i64)
  (local $28 i64)
  (local $29 i64)
  (local $30 i64)
  (local $31 i64)
  (local $32 i64)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i64)
  (local $37 i64)
  (local $38 i64)
  (local $39 i64)
  (local $40 i64)
  (local $41 i64)
  (local $42 i64)
  (local $43 i64)
  (local $44 i64)
  (local $45 i64)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i64)
  (local $50 i64)
  (local $51 i64)
  (local $52 i64)
  (local $53 i64)
  (local $54 i64)
  (local $55 i64)
  (local $56 i64)
  (local $57 i64)
  (local $58 i64)
  (local $59 i64)
  (local $60 i32)
  local.get $1
  f64.const 0
  f64.lt
  local.set $2
  local.get $2
  if
   local.get $1
   f64.neg
   local.set $1
   local.get $0
   i32.const 45
   i32.store16 $0
  end
  block $~lib/util/number/grisu2|inlined.0 (result i32)
   local.get $1
   local.set $3
   local.get $0
   local.set $4
   local.get $2
   local.set $5
   local.get $3
   i64.reinterpret_f64
   local.set $6
   local.get $6
   i64.const 9218868437227405312
   i64.and
   i64.const 52
   i64.shr_u
   i32.wrap_i64
   local.set $7
   local.get $6
   i64.const 4503599627370495
   i64.and
   local.set $8
   local.get $7
   i32.const 0
   i32.ne
   i64.extend_i32_u
   i64.const 52
   i64.shl
   local.get $8
   i64.add
   local.set $9
   local.get $7
   i32.const 1
   local.get $7
   select
   i32.const 1023
   i32.const 52
   i32.add
   i32.sub
   local.set $7
   local.get $9
   local.set $10
   local.get $7
   local.set $11
   local.get $10
   i64.const 1
   i64.shl
   i64.const 1
   i64.add
   local.set $12
   local.get $11
   i32.const 1
   i32.sub
   local.set $13
   local.get $12
   i64.clz
   i32.wrap_i64
   local.set $14
   local.get $12
   local.get $14
   i64.extend_i32_s
   i64.shl
   local.set $12
   local.get $13
   local.get $14
   i32.sub
   local.set $13
   i32.const 1
   local.get $10
   i64.const 4503599627370496
   i64.eq
   i32.add
   local.set $15
   local.get $12
   global.set $~lib/util/number/_frc_plus
   local.get $10
   local.get $15
   i64.extend_i32_s
   i64.shl
   i64.const 1
   i64.sub
   local.get $11
   local.get $15
   i32.sub
   local.get $13
   i32.sub
   i64.extend_i32_s
   i64.shl
   global.set $~lib/util/number/_frc_minus
   local.get $13
   global.set $~lib/util/number/_exp
   global.get $~lib/util/number/_exp
   local.set $16
   i32.const -61
   local.get $16
   i32.sub
   f64.convert_i32_s
   f64.const 0.30102999566398114
   f64.mul
   f64.const 347
   f64.add
   local.set $17
   local.get $17
   i32.trunc_sat_f64_s
   local.set $18
   local.get $18
   local.get $18
   f64.convert_i32_s
   local.get $17
   f64.ne
   i32.add
   local.set $18
   local.get $18
   i32.const 3
   i32.shr_s
   i32.const 1
   i32.add
   local.set $19
   i32.const 348
   local.get $19
   i32.const 3
   i32.shl
   i32.sub
   global.set $~lib/util/number/_K
   i32.const 8584
   local.get $19
   i32.const 3
   i32.shl
   i32.add
   i64.load $0
   global.set $~lib/util/number/_frc_pow
   i32.const 9280
   local.get $19
   i32.const 1
   i32.shl
   i32.add
   i32.load16_s $0
   global.set $~lib/util/number/_exp_pow
   local.get $9
   i64.clz
   i32.wrap_i64
   local.set $20
   local.get $9
   local.get $20
   i64.extend_i32_s
   i64.shl
   local.set $9
   local.get $7
   local.get $20
   i32.sub
   local.set $7
   global.get $~lib/util/number/_frc_pow
   local.set $21
   global.get $~lib/util/number/_exp_pow
   local.set $22
   block $~lib/util/number/umul64f|inlined.0 (result i64)
    local.get $9
    local.set $23
    local.get $21
    local.set $24
    local.get $23
    i64.const 4294967295
    i64.and
    local.set $25
    local.get $24
    i64.const 4294967295
    i64.and
    local.set $26
    local.get $23
    i64.const 32
    i64.shr_u
    local.set $27
    local.get $24
    i64.const 32
    i64.shr_u
    local.set $28
    local.get $25
    local.get $26
    i64.mul
    local.set $29
    local.get $27
    local.get $26
    i64.mul
    local.get $29
    i64.const 32
    i64.shr_u
    i64.add
    local.set $30
    local.get $25
    local.get $28
    i64.mul
    local.get $30
    i64.const 4294967295
    i64.and
    i64.add
    local.set $31
    local.get $31
    i64.const 2147483647
    i64.add
    local.set $31
    local.get $30
    i64.const 32
    i64.shr_u
    local.set $30
    local.get $31
    i64.const 32
    i64.shr_u
    local.set $31
    local.get $27
    local.get $28
    i64.mul
    local.get $30
    i64.add
    local.get $31
    i64.add
    br $~lib/util/number/umul64f|inlined.0
   end
   local.set $32
   block $~lib/util/number/umul64e|inlined.0 (result i32)
    local.get $7
    local.set $33
    local.get $22
    local.set $34
    local.get $33
    local.get $34
    i32.add
    i32.const 64
    i32.add
    br $~lib/util/number/umul64e|inlined.0
   end
   local.set $35
   block $~lib/util/number/umul64f|inlined.1 (result i64)
    global.get $~lib/util/number/_frc_plus
    local.set $36
    local.get $21
    local.set $37
    local.get $36
    i64.const 4294967295
    i64.and
    local.set $38
    local.get $37
    i64.const 4294967295
    i64.and
    local.set $39
    local.get $36
    i64.const 32
    i64.shr_u
    local.set $40
    local.get $37
    i64.const 32
    i64.shr_u
    local.set $41
    local.get $38
    local.get $39
    i64.mul
    local.set $42
    local.get $40
    local.get $39
    i64.mul
    local.get $42
    i64.const 32
    i64.shr_u
    i64.add
    local.set $43
    local.get $38
    local.get $41
    i64.mul
    local.get $43
    i64.const 4294967295
    i64.and
    i64.add
    local.set $44
    local.get $44
    i64.const 2147483647
    i64.add
    local.set $44
    local.get $43
    i64.const 32
    i64.shr_u
    local.set $43
    local.get $44
    i64.const 32
    i64.shr_u
    local.set $44
    local.get $40
    local.get $41
    i64.mul
    local.get $43
    i64.add
    local.get $44
    i64.add
    br $~lib/util/number/umul64f|inlined.1
   end
   i64.const 1
   i64.sub
   local.set $45
   block $~lib/util/number/umul64e|inlined.1 (result i32)
    global.get $~lib/util/number/_exp
    local.set $46
    local.get $22
    local.set $47
    local.get $46
    local.get $47
    i32.add
    i32.const 64
    i32.add
    br $~lib/util/number/umul64e|inlined.1
   end
   local.set $48
   block $~lib/util/number/umul64f|inlined.2 (result i64)
    global.get $~lib/util/number/_frc_minus
    local.set $49
    local.get $21
    local.set $50
    local.get $49
    i64.const 4294967295
    i64.and
    local.set $51
    local.get $50
    i64.const 4294967295
    i64.and
    local.set $52
    local.get $49
    i64.const 32
    i64.shr_u
    local.set $53
    local.get $50
    i64.const 32
    i64.shr_u
    local.set $54
    local.get $51
    local.get $52
    i64.mul
    local.set $55
    local.get $53
    local.get $52
    i64.mul
    local.get $55
    i64.const 32
    i64.shr_u
    i64.add
    local.set $56
    local.get $51
    local.get $54
    i64.mul
    local.get $56
    i64.const 4294967295
    i64.and
    i64.add
    local.set $57
    local.get $57
    i64.const 2147483647
    i64.add
    local.set $57
    local.get $56
    i64.const 32
    i64.shr_u
    local.set $56
    local.get $57
    i64.const 32
    i64.shr_u
    local.set $57
    local.get $53
    local.get $54
    i64.mul
    local.get $56
    i64.add
    local.get $57
    i64.add
    br $~lib/util/number/umul64f|inlined.2
   end
   i64.const 1
   i64.add
   local.set $58
   local.get $45
   local.get $58
   i64.sub
   local.set $59
   local.get $4
   local.get $32
   local.get $35
   local.get $45
   local.get $48
   local.get $59
   local.get $5
   call $~lib/util/number/genDigits
   br $~lib/util/number/grisu2|inlined.0
  end
  local.set $60
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.get $60
  local.get $2
  i32.sub
  global.get $~lib/util/number/_K
  call $~lib/util/number/prettify
  local.set $60
  local.get $60
  local.get $2
  i32.add
  return
 )
 (func $~lib/number/F64#toString (param $0 f64) (param $1 i32) (result i32)
  local.get $0
  call $~lib/util/number/dtoa
  return
 )
 (func $~lib/rt/__visit_globals (param $0 i32)
  (local $1 i32)
  global.get $wasi-demo/buffer
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 496
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 7584
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 304
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 6368
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 192
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 1488
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 2544
  local.get $0
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/arraybuffer/ArrayBufferView~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/object/Object~visit (param $0 i32) (param $1 i32)
  nop
 )
 (func $~lib/array/Array<i32>#get:buffer (param $0 i32) (result i32)
  local.get $0
  i32.load $0
 )
 (func $~lib/array/Array<i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#__visit
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 1
  drop
  local.get $0
  local.set $2
  local.get $2
  local.get $0
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   if
    local.get $2
    i32.load $0
    local.set $4
    local.get $4
    if
     local.get $4
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/staticarray/StaticArray<~lib/string/String>#__visit
 )
 (func $~lib/rt/__visit_members (param $0 i32) (param $1 i32)
  block $invalid
   block $~lib/date/Date
    block $~lib/wasi_date/wasi_Date
     block $~lib/staticarray/StaticArray<~lib/string/String>
      block $~lib/array/Array<i32>
       block $~lib/arraybuffer/ArrayBufferView
        block $~lib/string/String
         block $~lib/arraybuffer/ArrayBuffer
          block $~lib/object/Object
           local.get $0
           i32.const 8
           i32.sub
           i32.load $0
           br_table $~lib/object/Object $~lib/arraybuffer/ArrayBuffer $~lib/string/String $~lib/arraybuffer/ArrayBufferView $~lib/array/Array<i32> $~lib/staticarray/StaticArray<~lib/string/String> $~lib/wasi_date/wasi_Date $~lib/date/Date $invalid
          end
          return
         end
         return
        end
        return
       end
       local.get $0
       local.get $1
       call $~lib/arraybuffer/ArrayBufferView~visit
       return
      end
      local.get $0
      local.get $1
      call $~lib/array/Array<i32>~visit
      return
     end
     local.get $0
     local.get $1
     call $~lib/staticarray/StaticArray<~lib/string/String>~visit
     return
    end
    return
   end
   return
  end
  unreachable
 )
 (func $~start
  global.get $~started
  if
   return
  end
  i32.const 1
  global.set $~started
  call $start:wasi-demo
 )
 (func $~stack_check
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__data_end
  i32.lt_s
  if
   i32.const 42480
   i32.const 42528
   i32.const 1
   i32.const 1
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
 )
 (func $~lib/string/String.__eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  local.get $1
  i32.eq
  if
   i32.const 1
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $0
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 0
   i32.eq
  end
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $0
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/string/String#get:length
  local.set $2
  local.get $2
  local.get $1
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/string/String#get:length
  i32.ne
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $0
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  local.get $1
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  local.get $2
  call $~lib/util/string/compareImpl
  i32.eqz
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/string/String.__ne (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $1
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/string/String.__eq
  i32.eqz
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/wasi_internal/wasi_abort (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  i32.const 12
  call $~lib/bindings/wasi_snapshot_preview1/iovec#set:buf
  i32.const 12
  local.set $4
  local.get $4
  i64.const 9071471065260641
  i64.store $0
  local.get $4
  i32.const 7
  i32.add
  local.set $4
  local.get $0
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  i32.const 0
  call $~lib/string/String.__ne
  if
   local.get $4
   local.get $0
   local.get $0
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0
   local.get $10
   call $~lib/string/String#get:length
   local.get $4
   i32.const 0
   i32.const 3
   global.set $~argumentsLength
   i32.const 0
   call $~lib/string/String.UTF8.encodeUnsafe@varargs
   i32.add
   local.set $4
  end
  local.get $4
  i32.const 544106784
  i32.store $0
  local.get $4
  i32.const 4
  i32.add
  local.set $4
  local.get $1
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  i32.const 0
  call $~lib/string/String.__ne
  if
   local.get $4
   local.get $1
   local.get $1
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0
   local.get $10
   call $~lib/string/String#get:length
   local.get $4
   i32.const 0
   i32.const 3
   global.set $~argumentsLength
   i32.const 0
   call $~lib/string/String.UTF8.encodeUnsafe@varargs
   i32.add
   local.set $4
  end
  local.get $4
  local.tee $5
  i32.const 1
  i32.add
  local.set $4
  local.get $5
  i32.const 40
  i32.store8 $0
  local.get $2
  call $~lib/util/number/decimalCount32
  local.set $6
  local.get $4
  local.get $6
  i32.add
  local.set $4
  loop $do-loop|0
   local.get $2
   i32.const 10
   i32.div_u
   local.set $7
   local.get $4
   i32.const 1
   i32.sub
   local.tee $4
   i32.const 48
   local.get $2
   i32.const 10
   i32.rem_u
   i32.add
   i32.store8 $0
   local.get $7
   local.set $2
   local.get $2
   br_if $do-loop|0
  end
  local.get $4
  local.get $6
  i32.add
  local.set $4
  local.get $4
  local.tee $8
  i32.const 1
  i32.add
  local.set $4
  local.get $8
  i32.const 58
  i32.store8 $0
  local.get $3
  call $~lib/util/number/decimalCount32
  local.set $6
  local.get $4
  local.get $6
  i32.add
  local.set $4
  loop $do-loop|1
   local.get $3
   i32.const 10
   i32.div_u
   local.set $9
   local.get $4
   i32.const 1
   i32.sub
   local.tee $4
   i32.const 48
   local.get $3
   i32.const 10
   i32.rem_u
   i32.add
   i32.store8 $0
   local.get $9
   local.set $3
   local.get $3
   br_if $do-loop|1
  end
  local.get $4
  local.get $6
  i32.add
  local.set $4
  local.get $4
  i32.const 2601
  i32.store16 $0
  local.get $4
  i32.const 2
  i32.add
  local.set $4
  i32.const 0
  local.get $4
  i32.const 12
  i32.sub
  call $~lib/bindings/wasi_snapshot_preview1/iovec#set:buf_len
  i32.const 2
  i32.const 0
  i32.const 1
  i32.const 8
  call $~lib/bindings/wasi_snapshot_preview1/fd_write
  drop
  i32.const 255
  call $~lib/bindings/wasi_snapshot_preview1/proc_exit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<i32>#get:length_
  i32.ge_u
  if
   i32.const 496
   i32.const 816
   i32.const 114
   i32.const 42
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $0
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<i32>#get:dataStart
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $2
  i32.const 0
  drop
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/util/string/joinStringArray (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 2640
   local.set $13
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $13
   return
  end
  local.get $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0
   local.tee $4
   i32.store $0
   local.get $4
   if (result i32)
    local.get $4
   else
    i32.const 2640
   end
   local.set $13
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $13
   return
  end
  i32.const 0
  local.set $5
  i32.const 0
  local.set $7
  loop $for-loop|0
   local.get $7
   local.get $1
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $6
    i32.store $0 offset=4
    local.get $6
    i32.const 0
    i32.ne
    if
     local.get $5
     local.get $6
     local.set $13
     global.get $~lib/memory/__stack_pointer
     local.get $13
     i32.store $0 offset=8
     local.get $13
     call $~lib/string/String#get:length
     i32.add
     local.set $5
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $8
  local.get $2
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=8
  local.get $13
  call $~lib/string/String#get:length
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $5
  local.get $9
  local.get $3
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $10
  i32.store $0 offset=12
  i32.const 0
  local.set $11
  loop $for-loop|1
   local.get $11
   local.get $3
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $11
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $6
    i32.store $0 offset=4
    local.get $6
    i32.const 0
    i32.ne
    if
     local.get $6
     local.set $13
     global.get $~lib/memory/__stack_pointer
     local.get $13
     i32.store $0 offset=8
     local.get $13
     call $~lib/string/String#get:length
     local.set $12
     local.get $10
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $6
     local.get $12
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $8
     local.get $12
     i32.add
     local.set $8
    end
    local.get $9
    if
     local.get $10
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $9
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $8
     local.get $9
     i32.add
     local.set $8
    end
    local.get $11
    i32.const 1
    i32.add
    local.set $11
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  i32.ne
  if
   local.get $10
   local.get $8
   i32.const 1
   i32.shl
   i32.add
   local.get $6
   local.get $6
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=8
   local.get $13
   call $~lib/string/String#get:length
   i32.const 1
   i32.shl
   memory.copy $0 $0
  end
  local.get $10
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
  return
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 1
  drop
  local.get $0
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/staticarray/StaticArray<~lib/string/String>#get:length
  local.get $1
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/util/string/joinStringArray
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/wasi_process/writeString (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $1
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  call $~lib/string/String#get:length
  local.set $2
  i32.const 0
  local.set $3
  i32.const 0
  local.set $4
  i32.const 0
  local.set $5
  block $break|0
   block $case4|0
    block $case3|0
     block $case2|0
      block $case1|0
       block $case0|0
        local.get $2
        local.set $6
        local.get $6
        i32.const 4
        i32.eq
        br_if $case0|0
        local.get $6
        i32.const 3
        i32.eq
        br_if $case1|0
        local.get $6
        i32.const 2
        i32.eq
        br_if $case2|0
        local.get $6
        i32.const 1
        i32.eq
        br_if $case3|0
        local.get $6
        i32.const 0
        i32.eq
        br_if $case4|0
        br $break|0
       end
       local.get $1
       i32.load16_u $0 offset=6
       local.set $5
       local.get $5
       i32.const 128
       i32.ge_u
       if
        br $break|0
       end
      end
      local.get $1
      i32.load16_u $0 offset=4
      local.set $4
      local.get $4
      i32.const 128
      i32.ge_u
      if
       br $break|0
      end
     end
     local.get $1
     i32.load16_u $0 offset=2
     local.set $3
     local.get $3
     i32.const 128
     i32.ge_u
     if
      br $break|0
     end
    end
    local.get $1
    i32.load16_u $0
    local.set $7
    local.get $7
    i32.const 128
    i32.ge_u
    if
     br $break|0
    end
    global.get $~lib/wasi_internal/tempbuf
    global.get $~lib/wasi_internal/tempbuf
    i32.const 2
    i32.const 4
    i32.mul
    i32.add
    i32.store $0
    global.get $~lib/wasi_internal/tempbuf
    local.get $2
    i32.store $0 offset=4
    global.get $~lib/wasi_internal/tempbuf
    local.get $7
    local.get $3
    i32.const 8
    i32.shl
    i32.or
    local.get $4
    i32.const 16
    i32.shl
    i32.or
    local.get $5
    i32.const 24
    i32.shl
    i32.or
    i32.store $0 offset=8
    local.get $0
    global.get $~lib/wasi_internal/tempbuf
    i32.const 1
    global.get $~lib/wasi_internal/tempbuf
    i32.const 3
    i32.const 4
    i32.mul
    i32.add
    call $~lib/bindings/wasi_snapshot_preview1/fd_write
    local.set $8
    local.get $8
    i32.const 65535
    i32.and
    if
     local.get $8
     call $~lib/bindings/wasi_snapshot_preview1/errnoToString
     i32.const 5760
     i32.const 177
     i32.const 16
     call $~lib/wasi_internal/wasi_abort
     unreachable
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $1
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  i32.const 0
  call $~lib/string/String.UTF8.byteLength
  local.set $9
  local.get $9
  call $~lib/rt/tlsf/__alloc
  local.set $10
  local.get $1
  local.get $2
  local.get $10
  i32.const 0
  i32.const 3
  global.set $~argumentsLength
  i32.const 0
  call $~lib/string/String.UTF8.encodeUnsafe@varargs
  local.get $9
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 5760
   i32.const 183
   i32.const 3
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  global.get $~lib/wasi_internal/tempbuf
  local.get $10
  i32.store $0
  global.get $~lib/wasi_internal/tempbuf
  local.get $9
  i32.store $0 offset=4
  local.get $0
  global.get $~lib/wasi_internal/tempbuf
  i32.const 1
  global.get $~lib/wasi_internal/tempbuf
  i32.const 2
  i32.const 4
  i32.mul
  i32.add
  call $~lib/bindings/wasi_snapshot_preview1/fd_write
  local.set $11
  local.get $10
  call $~lib/rt/tlsf/__free
  local.get $11
  i32.const 65535
  i32.and
  if
   local.get $11
   call $~lib/bindings/wasi_snapshot_preview1/errnoToString
   i32.const 5760
   i32.const 188
   i32.const 12
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/wasi_process/WritableStream#write<~lib/string/String> (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $0
  local.get $1
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/wasi_process/writeString
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/wasi_console/wasi_console.log (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/wasi_process/wasi_process.stdout
  local.set $1
  local.get $1
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/wasi_process/WritableStream#write<~lib/string/String>
  local.get $1
  i32.const 5824
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/wasi_process/WritableStream#write<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/date/Date#constructor (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 7
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  call $~lib/date/Date#set:epochMillis
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/date/Date#set:year
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/date/Date#set:month
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/date/Date#set:day
  local.get $1
  call $~lib/date/invalidDate
  if
   i32.const 6368
   i32.const 6416
   i32.const 100
   i32.const 35
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  call $~lib/date/dateFromEpoch
  call $~lib/date/Date#set:year
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $~lib/date/_month
  call $~lib/date/Date#set:month
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $~lib/date/_day
  call $~lib/date/Date#set:day
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/wasi_date/wasi_Date#constructor (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 6
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  call $~lib/date/Date#constructor
  local.tee $0
  i32.store $0
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/string/String#padStart (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $3
  local.get $1
  i32.const 1
  i32.shl
  local.set $4
  local.get $2
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $5
  local.get $4
  local.get $3
  i32.lt_u
  if (result i32)
   i32.const 1
  else
   local.get $5
   i32.eqz
  end
  if
   local.get $0
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $4
  local.get $3
  i32.sub
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $7
  i32.store $0 offset=4
  local.get $6
  local.get $5
  i32.gt_u
  if
   local.get $6
   i32.const 2
   i32.sub
   local.get $5
   i32.div_u
   local.set $8
   local.get $8
   local.get $5
   i32.mul
   local.set $9
   local.get $6
   local.get $9
   i32.sub
   local.set $10
   local.get $7
   local.get $2
   local.get $5
   local.get $8
   call $~lib/memory/memory.repeat
   local.get $7
   local.get $9
   i32.add
   local.get $2
   local.get $10
   memory.copy $0 $0
  else
   local.get $7
   local.get $2
   local.get $6
   memory.copy $0 $0
  end
  local.get $7
  local.get $6
  i32.add
  local.get $0
  local.get $3
  memory.copy $0 $0
  local.get $7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
  return
 )
 (func $~lib/date/stringify (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 10
  call $~lib/number/I32#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $1
  i32.const 1056
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/string/String#padStart
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/date/Date#toDateString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 56
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 56
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.const 5
  i32.const 6816
  call $~lib/rt/__newBuffer
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.const 5
  i32.const 7248
  call $~lib/rt/__newBuffer
  local.tee $4
  i32.store $0 offset=4
  local.get $0
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=8
  local.get $20
  call $~lib/date/Date#get:month
  local.set $5
  local.get $0
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=8
  local.get $20
  call $~lib/date/Date#get:day
  local.set $6
  local.get $0
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=8
  local.get $20
  call $~lib/date/Date#get:year
  local.set $7
  local.get $7
  local.get $5
  local.get $6
  call $~lib/date/dayOfWeek
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $7
  local.tee $9
  i32.const 31
  i32.shr_s
  local.tee $10
  local.get $9
  i32.add
  local.get $10
  i32.xor
  i32.const 4
  call $~lib/date/stringify
  local.tee $11
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $4
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=8
  local.get $20
  local.get $5
  i32.const 1
  i32.sub
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uget
  local.tee $12
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $2
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=8
  local.get $20
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uget
  local.tee $13
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.const 2
  call $~lib/date/stringify
  local.tee $14
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $13
  local.tee $15
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $12
  local.tee $16
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $14
  local.tee $17
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 7392
  else
   i32.const 6528
  end
  local.tee $18
  i32.store $0 offset=40
  global.get $~lib/memory/__stack_pointer
  local.get $11
  local.tee $19
  i32.store $0 offset=44
  i32.const 7344
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=8
  local.get $20
  i32.const 0
  local.get $15
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=48
  local.get $20
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 7344
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=8
  local.get $20
  i32.const 1
  local.get $16
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=48
  local.get $20
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 7344
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=8
  local.get $20
  i32.const 2
  local.get $17
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=48
  local.get $20
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 7344
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=8
  local.get $20
  i32.const 3
  local.get $18
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=48
  local.get $20
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 7344
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=8
  local.get $20
  i32.const 4
  local.get $19
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=48
  local.get $20
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 7344
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=8
  local.get $20
  i32.const 2640
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0 offset=52
  local.get $20
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $20
  global.get $~lib/memory/__stack_pointer
  i32.const 56
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $20
  return
 )
 (func $~lib/date/Date#getUTCHours (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $~lib/date/euclidRem<i64>|inlined.0 (result i64)
   local.get $0
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/date/Date#get:epochMillis
   local.set $1
   i32.const 86400000
   i64.extend_i32_s
   local.set $2
   local.get $1
   local.get $2
   i64.rem_s
   local.set $3
   local.get $3
   local.get $3
   i64.const 0
   i64.lt_s
   if (result i64)
    local.get $2
   else
    i64.const 0
   end
   i64.add
   br $~lib/date/euclidRem<i64>|inlined.0
  end
  i32.wrap_i64
  i32.const 3600000
  i32.div_s
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/date/Date#getUTCMinutes (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $~lib/date/euclidRem<i64>|inlined.1 (result i64)
   local.get $0
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/date/Date#get:epochMillis
   local.set $1
   i32.const 3600000
   i64.extend_i32_s
   local.set $2
   local.get $1
   local.get $2
   i64.rem_s
   local.set $3
   local.get $3
   local.get $3
   i64.const 0
   i64.lt_s
   if (result i64)
    local.get $2
   else
    i64.const 0
   end
   i64.add
   br $~lib/date/euclidRem<i64>|inlined.1
  end
  i32.wrap_i64
  i32.const 60000
  i32.div_s
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/date/Date#getUTCSeconds (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $~lib/date/euclidRem<i64>|inlined.2 (result i64)
   local.get $0
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/date/Date#get:epochMillis
   local.set $1
   i32.const 60000
   i64.extend_i32_s
   local.set $2
   local.get $1
   local.get $2
   i64.rem_s
   local.set $3
   local.get $3
   local.get $3
   i64.const 0
   i64.lt_s
   if (result i64)
    local.get $2
   else
    i64.const 0
   end
   i64.add
   br $~lib/date/euclidRem<i64>|inlined.2
  end
  i32.wrap_i64
  i32.const 1000
  i32.div_s
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/date/Date#toTimeString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/date/Date#getUTCHours
  i32.const 2
  call $~lib/date/stringify
  local.tee $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/date/Date#getUTCMinutes
  i32.const 2
  call $~lib/date/stringify
  local.tee $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/date/Date#getUTCSeconds
  i32.const 2
  call $~lib/date/stringify
  local.tee $3
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.tee $4
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $2
  local.tee $5
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $3
  local.tee $6
  i32.store $0 offset=24
  i32.const 7456
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 0
  local.get $4
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=28
  local.get $7
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 7456
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 2
  local.get $5
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=28
  local.get $7
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 7456
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 4
  local.get $6
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=28
  local.get $7
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 7456
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 2640
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=32
  local.get $7
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $~lib/date/Date#toString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/date/Date#toDateString
  local.tee $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/date/Date#toTimeString
  local.tee $2
  i32.store $0 offset=8
  i32.const 6560
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  local.get $1
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 6560
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 2
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 6560
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 2640
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/string/String#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $2
  local.get $1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $3
  local.get $2
  local.get $3
  i32.add
  local.set $4
  local.get $4
  i32.const 0
  i32.eq
  if
   i32.const 2640
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store $0 offset=4
  local.get $5
  local.get $0
  local.get $2
  memory.copy $0 $0
  local.get $5
  local.get $2
  i32.add
  local.get $1
  local.get $3
  memory.copy $0 $0
  local.get $5
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/string/String.__concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $1
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/string/String#concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/wasi_process/ReadableStream#read (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $1
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $3
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $2
   local.get $3
   i32.gt_u
  end
  if
   i32.const 496
   i32.const 5760
   i32.const 134
   i32.const 7
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  global.get $~lib/wasi_internal/tempbuf
  local.get $1
  local.get $2
  i32.add
  i32.store $0
  global.get $~lib/wasi_internal/tempbuf
  local.get $3
  local.get $2
  i32.sub
  i32.store $0 offset=4
  local.get $0
  global.get $~lib/wasi_internal/tempbuf
  i32.const 1
  global.get $~lib/wasi_internal/tempbuf
  i32.const 2
  i32.const 4
  i32.mul
  i32.add
  call $~lib/bindings/wasi_snapshot_preview1/fd_read
  local.set $4
  local.get $4
  i32.const 65535
  i32.and
  if
   local.get $4
   call $~lib/bindings/wasi_snapshot_preview1/errnoToString
   i32.const 5760
   i32.const 139
   i32.const 14
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  global.get $~lib/wasi_internal/tempbuf
  i32.load $0 offset=8
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/string/String.UTF8.decode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.get $1
  call $~lib/string/String.UTF8.decodeUnsafe
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $wasi-demo/waitForUserEnter (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill $0
  block $~lib/as-rainbow/assembly/index/rainbow.italicMk|inlined.1 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.tee $1
   i32.store $0 offset=4
   block $~lib/as-rainbow/assembly/index/colorText|inlined.6 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 2
    i32.const 2
    i32.const 4
    i32.const 8080
    call $~lib/rt/__newArray
    local.tee $4
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    local.tee $5
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $4
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=16
    local.get $10
    i32.const 0
    call $~lib/array/Array<i32>#__get
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $6
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $5
    local.tee $7
    i32.store $0 offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $4
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=16
    local.get $10
    i32.const 1
    call $~lib/array/Array<i32>#__get
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $8
    i32.store $0 offset=28
    i32.const 8112
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=16
    local.get $10
    i32.const 1
    local.get $6
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=32
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 8112
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=16
    local.get $10
    i32.const 3
    local.get $7
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=32
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 8112
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=16
    local.get $10
    i32.const 5
    local.get $8
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=32
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 8112
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=16
    local.get $10
    i32.const 2640
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=36
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    br $~lib/as-rainbow/assembly/index/colorText|inlined.6
   end
   br $~lib/as-rainbow/assembly/index/rainbow.italicMk|inlined.1
  end
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $~lib/wasi_console/wasi_console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 1
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $9
  i32.store $0 offset=40
  global.get $~lib/wasi_process/wasi_process.stdin
  local.get $9
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=16
  local.get $10
  i32.const 0
  call $~lib/wasi_process/ReadableStream#read
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $start:wasi-demo
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 192
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 192
  memory.fill $0
  memory.size $0
  i32.const 16
  i32.shl
  global.get $~lib/memory/__heap_base
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 416
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/pinSpace
  i32.const 448
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/toSpace
  i32.const 592
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/fromSpace
  block $~lib/as-rainbow/assembly/index/rainbow.blue|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   block $~lib/as-rainbow/assembly/index/rainbow.boldMk|inlined.0 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 32
    local.tee $0
    i32.store $0 offset=4
    block $~lib/as-rainbow/assembly/index/colorText|inlined.0 (result i32)
     global.get $~lib/memory/__stack_pointer
     i32.const 2
     i32.const 2
     i32.const 4
     i32.const 160
     call $~lib/rt/__newArray
     local.tee $3
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.tee $4
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $3
     local.set $57
     global.get $~lib/memory/__stack_pointer
     local.get $57
     i32.store $0 offset=16
     local.get $57
     i32.const 0
     call $~lib/array/Array<i32>#__get
     i32.const 10
     call $~lib/number/I32#toString
     local.tee $5
     i32.store $0 offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $4
     local.tee $6
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $3
     local.set $57
     global.get $~lib/memory/__stack_pointer
     local.get $57
     i32.store $0 offset=16
     local.get $57
     i32.const 1
     call $~lib/array/Array<i32>#__get
     i32.const 10
     call $~lib/number/I32#toString
     local.tee $7
     i32.store $0 offset=28
     i32.const 768
     local.set $57
     global.get $~lib/memory/__stack_pointer
     local.get $57
     i32.store $0 offset=16
     local.get $57
     i32.const 1
     local.get $5
     local.set $57
     global.get $~lib/memory/__stack_pointer
     local.get $57
     i32.store $0 offset=32
     local.get $57
     call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
     i32.const 768
     local.set $57
     global.get $~lib/memory/__stack_pointer
     local.get $57
     i32.store $0 offset=16
     local.get $57
     i32.const 3
     local.get $6
     local.set $57
     global.get $~lib/memory/__stack_pointer
     local.get $57
     i32.store $0 offset=32
     local.get $57
     call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
     i32.const 768
     local.set $57
     global.get $~lib/memory/__stack_pointer
     local.get $57
     i32.store $0 offset=16
     local.get $57
     i32.const 5
     local.get $7
     local.set $57
     global.get $~lib/memory/__stack_pointer
     local.get $57
     i32.store $0 offset=32
     local.get $57
     call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
     i32.const 768
     local.set $57
     global.get $~lib/memory/__stack_pointer
     local.get $57
     i32.store $0 offset=16
     local.get $57
     i32.const 2640
     local.set $57
     global.get $~lib/memory/__stack_pointer
     local.get $57
     i32.store $0 offset=36
     local.get $57
     call $~lib/staticarray/StaticArray<~lib/string/String>#join
     br $~lib/as-rainbow/assembly/index/colorText|inlined.0
    end
    br $~lib/as-rainbow/assembly/index/rainbow.boldMk|inlined.0
   end
   local.tee $8
   i32.store $0 offset=40
   block $~lib/as-rainbow/assembly/index/colorText|inlined.1 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 2
    i32.const 2
    i32.const 4
    i32.const 2672
    call $~lib/rt/__newArray
    local.tee $11
    i32.store $0 offset=44
    global.get $~lib/memory/__stack_pointer
    local.get $8
    local.tee $12
    i32.store $0 offset=48
    global.get $~lib/memory/__stack_pointer
    local.get $11
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 0
    call $~lib/array/Array<i32>#__get
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $13
    i32.store $0 offset=52
    global.get $~lib/memory/__stack_pointer
    local.get $12
    local.tee $14
    i32.store $0 offset=56
    global.get $~lib/memory/__stack_pointer
    local.get $11
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 1
    call $~lib/array/Array<i32>#__get
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $15
    i32.store $0 offset=60
    i32.const 2704
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 1
    local.get $13
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 2704
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 3
    local.get $14
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 2704
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 5
    local.get $15
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 2704
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 2640
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=36
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    br $~lib/as-rainbow/assembly/index/colorText|inlined.1
   end
   br $~lib/as-rainbow/assembly/index/rainbow.blue|inlined.0
  end
  local.set $57
  global.get $~lib/memory/__stack_pointer
  local.get $57
  i32.store $0
  local.get $57
  call $~lib/wasi_console/wasi_console.log
  block $~lib/as-rainbow/assembly/index/rainbow.boldMk|inlined.1 (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 5856
   local.tee $16
   i32.store $0 offset=64
   block $~lib/as-rainbow/assembly/index/colorText|inlined.2 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 2
    i32.const 2
    i32.const 4
    i32.const 5968
    call $~lib/rt/__newArray
    local.tee $19
    i32.store $0 offset=68
    global.get $~lib/memory/__stack_pointer
    local.get $16
    local.tee $20
    i32.store $0 offset=72
    global.get $~lib/memory/__stack_pointer
    local.get $19
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 0
    call $~lib/array/Array<i32>#__get
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $21
    i32.store $0 offset=76
    global.get $~lib/memory/__stack_pointer
    local.get $20
    local.tee $22
    i32.store $0 offset=80
    global.get $~lib/memory/__stack_pointer
    local.get $19
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 1
    call $~lib/array/Array<i32>#__get
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $23
    i32.store $0 offset=84
    i32.const 6000
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 1
    local.get $21
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 6000
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 3
    local.get $22
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 6000
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 5
    local.get $23
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 6000
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 2640
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=36
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    br $~lib/as-rainbow/assembly/index/colorText|inlined.2
   end
   br $~lib/as-rainbow/assembly/index/rainbow.boldMk|inlined.1
  end
  local.set $57
  global.get $~lib/memory/__stack_pointer
  local.get $57
  i32.store $0
  local.get $57
  call $~lib/wasi_console/wasi_console.log
  i32.const 6048
  local.set $57
  global.get $~lib/memory/__stack_pointer
  local.get $57
  i32.store $0
  local.get $57
  call $~lib/wasi_console/wasi_console.log
  block $~lib/as-rainbow/assembly/index/rainbow.boldMk|inlined.2 (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 6224
   local.tee $24
   i32.store $0 offset=88
   block $~lib/as-rainbow/assembly/index/colorText|inlined.3 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 2
    i32.const 2
    i32.const 4
    i32.const 6288
    call $~lib/rt/__newArray
    local.tee $27
    i32.store $0 offset=92
    global.get $~lib/memory/__stack_pointer
    local.get $24
    local.tee $28
    i32.store $0 offset=96
    global.get $~lib/memory/__stack_pointer
    local.get $27
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    i32.const 0
    call $~lib/array/Array<i32>#__get
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $29
    i32.store $0 offset=100
    global.get $~lib/memory/__stack_pointer
    local.get $28
    local.tee $30
    i32.store $0 offset=104
    global.get $~lib/memory/__stack_pointer
    local.get $27
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    i32.const 1
    call $~lib/array/Array<i32>#__get
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $31
    i32.store $0 offset=108
    i32.const 6320
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    i32.const 1
    local.get $29
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=112
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 6320
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    i32.const 3
    local.get $30
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=112
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 6320
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    i32.const 5
    local.get $31
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=112
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 6320
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    i32.const 2640
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=116
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    br $~lib/as-rainbow/assembly/index/colorText|inlined.3
   end
   br $~lib/as-rainbow/assembly/index/rainbow.boldMk|inlined.2
  end
  local.set $57
  global.get $~lib/memory/__stack_pointer
  local.get $57
  i32.store $0 offset=16
  local.get $57
  block $~lib/as-rainbow/assembly/index/rainbow.italicMk|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/wasi_date/wasi_Date.now
   call $~lib/wasi_date/wasi_Date#constructor
   local.set $57
   global.get $~lib/memory/__stack_pointer
   local.get $57
   i32.store $0 offset=32
   local.get $57
   call $~lib/date/Date#toString
   local.tee $32
   i32.store $0 offset=120
   block $~lib/as-rainbow/assembly/index/colorText|inlined.4 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 2
    i32.const 2
    i32.const 4
    i32.const 7504
    call $~lib/rt/__newArray
    local.tee $35
    i32.store $0 offset=124
    global.get $~lib/memory/__stack_pointer
    local.get $32
    local.tee $36
    i32.store $0 offset=128
    global.get $~lib/memory/__stack_pointer
    local.get $35
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    i32.const 0
    call $~lib/array/Array<i32>#__get
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $37
    i32.store $0 offset=132
    global.get $~lib/memory/__stack_pointer
    local.get $36
    local.tee $38
    i32.store $0 offset=136
    global.get $~lib/memory/__stack_pointer
    local.get $35
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    i32.const 1
    call $~lib/array/Array<i32>#__get
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $39
    i32.store $0 offset=140
    i32.const 7536
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    i32.const 1
    local.get $37
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=112
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 7536
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    i32.const 3
    local.get $38
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=112
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 7536
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    i32.const 5
    local.get $39
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=112
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 7536
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    i32.const 2640
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=116
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    br $~lib/as-rainbow/assembly/index/colorText|inlined.4
   end
   br $~lib/as-rainbow/assembly/index/rainbow.italicMk|inlined.0
  end
  local.set $57
  global.get $~lib/memory/__stack_pointer
  local.get $57
  i32.store $0 offset=36
  local.get $57
  call $~lib/string/String.__concat
  local.set $57
  global.get $~lib/memory/__stack_pointer
  local.get $57
  i32.store $0
  local.get $57
  call $~lib/wasi_console/wasi_console.log
  i32.const 0
  i32.const 100
  call $~lib/arraybuffer/ArrayBuffer#constructor
  global.set $wasi-demo/buffer
  i32.const 7696
  local.set $57
  global.get $~lib/memory/__stack_pointer
  local.get $57
  i32.store $0
  local.get $57
  call $~lib/wasi_console/wasi_console.log
  global.get $~lib/wasi_process/wasi_process.stdin
  global.get $wasi-demo/buffer
  local.set $57
  global.get $~lib/memory/__stack_pointer
  local.get $57
  i32.store $0 offset=16
  local.get $57
  i32.const 0
  call $~lib/wasi_process/ReadableStream#read
  drop
  block $~lib/as-rainbow/assembly/index/rainbow.red|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 7856
   local.set $57
   global.get $~lib/memory/__stack_pointer
   local.get $57
   i32.store $0 offset=16
   local.get $57
   global.get $wasi-demo/buffer
   local.set $57
   global.get $~lib/memory/__stack_pointer
   local.get $57
   i32.store $0 offset=32
   local.get $57
   i32.const 0
   call $~lib/string/String.UTF8.decode
   local.set $57
   global.get $~lib/memory/__stack_pointer
   local.get $57
   i32.store $0 offset=36
   local.get $57
   call $~lib/string/String.__concat
   local.tee $40
   i32.store $0 offset=144
   block $~lib/as-rainbow/assembly/index/colorText|inlined.5 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 2
    i32.const 2
    i32.const 4
    i32.const 7904
    call $~lib/rt/__newArray
    local.tee $43
    i32.store $0 offset=148
    global.get $~lib/memory/__stack_pointer
    local.get $40
    local.tee $44
    i32.store $0 offset=152
    global.get $~lib/memory/__stack_pointer
    local.get $43
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 0
    call $~lib/array/Array<i32>#__get
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $45
    i32.store $0 offset=156
    global.get $~lib/memory/__stack_pointer
    local.get $44
    local.tee $46
    i32.store $0 offset=160
    global.get $~lib/memory/__stack_pointer
    local.get $43
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 1
    call $~lib/array/Array<i32>#__get
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $47
    i32.store $0 offset=164
    i32.const 7936
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 1
    local.get $45
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 7936
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 3
    local.get $46
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 7936
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 5
    local.get $47
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 7936
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 2640
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=36
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    br $~lib/as-rainbow/assembly/index/colorText|inlined.5
   end
   br $~lib/as-rainbow/assembly/index/rainbow.red|inlined.0
  end
  local.set $57
  global.get $~lib/memory/__stack_pointer
  local.get $57
  i32.store $0
  local.get $57
  call $~lib/wasi_console/wasi_console.log
  i32.const 7984
  local.set $57
  global.get $~lib/memory/__stack_pointer
  local.get $57
  i32.store $0
  local.get $57
  call $wasi-demo/waitForUserEnter
  i32.const 8160
  local.set $57
  global.get $~lib/memory/__stack_pointer
  local.get $57
  i32.store $0
  local.get $57
  call $~lib/wasi_console/wasi_console.log
  i32.const 0
  local.set $48
  loop $for-loop|0
   local.get $48
   i32.const 5
   i32.lt_s
   if
    call $~lib/math/NativeMath.random
    i32.const 0
    call $~lib/number/F64#toString
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0
    local.get $57
    call $~lib/wasi_console/wasi_console.log
    local.get $48
    i32.const 1
    i32.add
    local.set $48
    br $for-loop|0
   end
  end
  block $~lib/as-rainbow/assembly/index/rainbow.red|inlined.1 (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 9520
   local.tee $49
   i32.store $0 offset=168
   block $~lib/as-rainbow/assembly/index/colorText|inlined.7 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 2
    i32.const 2
    i32.const 4
    i32.const 9584
    call $~lib/rt/__newArray
    local.tee $52
    i32.store $0 offset=172
    global.get $~lib/memory/__stack_pointer
    local.get $49
    local.tee $53
    i32.store $0 offset=176
    global.get $~lib/memory/__stack_pointer
    local.get $52
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 0
    call $~lib/array/Array<i32>#__get
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $54
    i32.store $0 offset=180
    global.get $~lib/memory/__stack_pointer
    local.get $53
    local.tee $55
    i32.store $0 offset=184
    global.get $~lib/memory/__stack_pointer
    local.get $52
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 1
    call $~lib/array/Array<i32>#__get
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $56
    i32.store $0 offset=188
    i32.const 9616
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 1
    local.get $54
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 9616
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 3
    local.get $55
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 9616
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 5
    local.get $56
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=32
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 9616
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=16
    local.get $57
    i32.const 2640
    local.set $57
    global.get $~lib/memory/__stack_pointer
    local.get $57
    i32.store $0 offset=36
    local.get $57
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    br $~lib/as-rainbow/assembly/index/colorText|inlined.7
   end
   br $~lib/as-rainbow/assembly/index/rainbow.red|inlined.1
  end
  local.set $57
  global.get $~lib/memory/__stack_pointer
  local.get $57
  i32.store $0
  local.get $57
  call $~lib/wasi_console/wasi_console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 192
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  drop
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/array/Array<i32>#get:buffer
  local.get $1
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  local.get $1
  i32.shl
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 1
  local.get $3
  call $~lib/rt/__newBuffer
  local.tee $5
  i32.store $0
  i32.const 16
  local.get $2
  call $~lib/rt/itcms/__new
  local.set $6
  local.get $6
  local.get $5
  i32.store $0
  local.get $6
  local.get $5
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $6
  local.get $5
  i32.store $0 offset=4
  local.get $6
  local.get $4
  i32.store $0 offset=8
  local.get $6
  local.get $0
  i32.store $0 offset=12
  local.get $6
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $~lib/util/number/itoa32 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $1
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 864
   i32.const 992
   i32.const 373
   i32.const 5
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  local.get $0
  i32.eqz
  if
   i32.const 1056
   local.set $14
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $14
   return
  end
  local.get $0
  i32.const 31
  i32.shr_u
  i32.const 1
  i32.shl
  local.set $2
  local.get $2
  if
   i32.const 0
   local.get $0
   i32.sub
   local.set $0
  end
  local.get $1
  i32.const 10
  i32.eq
  if
   local.get $0
   call $~lib/util/number/decimalCount32
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.const 1
   i32.shl
   local.get $2
   i32.add
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   local.get $3
   local.get $2
   i32.add
   local.set $5
   local.get $0
   local.set $6
   local.get $4
   local.set $7
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $5
   local.get $6
   local.get $7
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $1
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $0
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.const 1
    i32.shl
    local.get $2
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $3
    i32.store $0
    local.get $3
    local.get $2
    i32.add
    local.set $9
    local.get $0
    local.set $10
    local.get $8
    local.set $11
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $9
    local.get $10
    i64.extend_i32_u
    local.get $11
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $0
    local.set $12
    local.get $12
    i64.extend_i32_u
    local.get $1
    call $~lib/util/number/ulog_base
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.const 1
    i32.shl
    local.get $2
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $3
    i32.store $0
    local.get $3
    local.get $2
    i32.add
    local.get $12
    i64.extend_i32_u
    local.get $13
    local.get $1
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $2
  if
   local.get $3
   i32.const 45
   i32.store16 $0
  end
  local.get $3
  local.set $14
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $14
  return
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $1
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 7584
   i32.const 7632
   i32.const 52
   i32.const 43
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/string/String.UTF8.decodeUnsafe (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  local.set $3
  local.get $0
  local.get $1
  i32.add
  local.set $4
  local.get $4
  local.get $3
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 256
   i32.const 770
   i32.const 7
   call $~lib/wasi_internal/wasi_abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store $0
  local.get $5
  local.set $6
  block $while-break|0
   loop $while-continue|0
    local.get $3
    local.get $4
    i32.lt_u
    if
     local.get $3
     i32.load8_u $0
     local.set $7
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     local.get $7
     i32.const 128
     i32.and
     i32.eqz
     if
      local.get $2
      local.get $7
      i32.eqz
      i32.and
      if
       br $while-break|0
      end
      local.get $6
      local.get $7
      i32.store16 $0
     else
      local.get $4
      local.get $3
      i32.eq
      if
       br $while-break|0
      end
      local.get $3
      i32.load8_u $0
      i32.const 63
      i32.and
      local.set $8
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      local.get $7
      i32.const 224
      i32.and
      i32.const 192
      i32.eq
      if
       local.get $6
       local.get $7
       i32.const 31
       i32.and
       i32.const 6
       i32.shl
       local.get $8
       i32.or
       i32.store16 $0
      else
       local.get $4
       local.get $3
       i32.eq
       if
        br $while-break|0
       end
       local.get $3
       i32.load8_u $0
       i32.const 63
       i32.and
       local.set $9
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       local.get $7
       i32.const 240
       i32.and
       i32.const 224
       i32.eq
       if
        local.get $7
        i32.const 15
        i32.and
        i32.const 12
        i32.shl
        local.get $8
        i32.const 6
        i32.shl
        i32.or
        local.get $9
        i32.or
        local.set $7
       else
        local.get $4
        local.get $3
        i32.eq
        if
         br $while-break|0
        end
        local.get $7
        i32.const 7
        i32.and
        i32.const 18
        i32.shl
        local.get $8
        i32.const 12
        i32.shl
        i32.or
        local.get $9
        i32.const 6
        i32.shl
        i32.or
        local.get $3
        i32.load8_u $0
        i32.const 63
        i32.and
        i32.or
        local.set $7
        local.get $3
        i32.const 1
        i32.add
        local.set $3
       end
       local.get $7
       i32.const 65536
       i32.lt_u
       if
        local.get $6
        local.get $7
        i32.store16 $0
       else
        local.get $7
        i32.const 65536
        i32.sub
        local.set $7
        local.get $7
        i32.const 10
        i32.shr_u
        i32.const 55296
        i32.or
        local.set $10
        local.get $7
        i32.const 1023
        i32.and
        i32.const 56320
        i32.or
        local.set $11
        local.get $6
        local.get $10
        local.get $11
        i32.const 16
        i32.shl
        i32.or
        i32.store $0
        local.get $6
        i32.const 2
        i32.add
        local.set $6
       end
      end
     end
     local.get $6
     i32.const 2
     i32.add
     local.set $6
     br $while-continue|0
    end
   end
  end
  local.get $5
  local.get $6
  local.get $5
  i32.sub
  call $~lib/rt/itcms/__renew
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
  return
 )
 (func $~lib/util/number/dtoa (param $0 f64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  f64.const 0
  f64.eq
  if
   i32.const 8384
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $0
  local.get $0
  f64.sub
  f64.const 0
  f64.eq
  i32.eqz
  if
   local.get $0
   local.get $0
   f64.ne
   if
    i32.const 8416
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   i32.const 8448
   i32.const 8496
   local.get $0
   f64.const 0
   f64.lt
   select
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 8528
  local.get $0
  call $~lib/util/number/dtoa_core
  i32.const 1
  i32.shl
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  local.get $2
  i32.const 8528
  local.get $1
  memory.copy $0 $0
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
)
